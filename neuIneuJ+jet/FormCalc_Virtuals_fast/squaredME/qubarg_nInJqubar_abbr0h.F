#if 0
* qubarg_nInJqubar_abbr0h.F
* abbreviations for {-F[3, {Gen(1), Col1}], V[5, {Glu2}]} -> {F[11, {Neu(3)}], F[11, {Neu(4)}], -F[3, {Gen(5), Col5}]}
* generated by FormCalc 9.4 (7 Jun 2016) on 3-Jul-2017 14:07
#endif

#include "qubarg_nInJqubar_vars.h"
#include "virt_inline.h"
#include "virt_contains.h"


        subroutine qubarg_nInJqubar_abbr0h
        implicit none

#include "qubarg_nInJqubar_vars.h"
#include "virt_inline.h"

        F1 = -ChainV0(Spinor(1,-1,2),0,0,Spinor(4,-1,1))

        F2 = -ChainV0(Spinor(3,1,2),0,0,Spinor(5,-1,1))

        F3 = ChainB0(Spinor(3,1,2),0,0,Spinor(5,-1,1))

        F4 = -ChainB0(Spinor(1,-1,2),0,0,Spinor(4,-1,1))

        F5 = -ChainV2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(4,-1,1))

        F6 = -ChainB2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(4,-1,1))

        F7 = ChainV1(Spinor(1,-1,2),0,e(2),0,Spinor(4,-1,1))

        F8 = ChainB1(Spinor(1,-1,2),0,e(2),0,Spinor(4,-1,1))

        F9 = -ChainV0(Spinor(1,-1,2),0,0,Spinor(3,-1,1))

        F10 = -ChainV0(Spinor(4,1,2),0,0,Spinor(5,-1,1))

        F11 = ChainB0(Spinor(4,1,2),0,0,Spinor(5,-1,1))

        F12 = -ChainB0(Spinor(1,-1,2),0,0,Spinor(3,-1,1))

        F13 = -ChainV2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(3,-1,1))

        F14 = -ChainB2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(3,-1,1))

        F15 = ChainB1(Spinor(1,-1,2),0,e(2),0,Spinor(3,-1,1))

        F16 = ChainV1(Spinor(1,-1,2),0,e(2),0,Spinor(3,-1,1))

        F17 = ChainV0(Spinor(5,-1,1),1,0,Spinor(3,-1,1))

        F18 = -ChainB2(Spinor(1,-1,2),0,e(2),k(2),1,Spinor(4,1,2))

        F19 = -ChainB0(Spinor(1,-1,2),0,1,Spinor(4,1,2))

        F20 = ChainV0(Spinor(1,-1,2),0,1,Spinor(4,1,2))

        F21 = ChainB0(Spinor(5,-1,1),1,0,Spinor(3,-1,1))

        F22 = ChainV1(Spinor(1,-1,2),0,e(2),1,Spinor(4,1,2))

        F23 = ChainV2(Spinor(1,-1,2),0,e(2),k(2),1,Spinor(4,1,2))

        F24 = -ChainB1(Spinor(1,-1,2),0,e(2),1,Spinor(4,1,2))

        F25 = ChainB1(Spinor(1,-1,2),0,e(2),0,Spinor(5,-1,1))

        F26 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F27 = ChainB1(Spinor(1,-1,2),0,k(2),0,Spinor(5,-1,1))

        F28 = ChainV1(Spinor(4,1,2),0,e(2),0,Spinor(3,-1,1))

        F29 = -ChainB0(Spinor(1,-1,2),0,0,Spinor(5,-1,1))

        F30 = -ChainB1(Spinor(4,1,2),0,e(2),0,Spinor(3,-1,1))

        F31 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F32 = ChainV1(Spinor(1,-1,2),0,e(2),0,Spinor(5,-1,1))

        F33 = ChainV1(Spinor(1,-1,2),0,k(2),0,Spinor(5,-1,1))

        F34 = -ChainV0(Spinor(1,-1,2),0,0,Spinor(5,-1,1))

        F35 = ChainB2(Spinor(4,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

        F36 = -ChainV2(Spinor(4,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

        F37 = -ChainB1(Spinor(4,1,2),0,e(2),0,Spinor(5,-1,1))

        F38 = ChainB2(Spinor(3,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

        F39 = ChainV1(Spinor(4,1,2),0,e(2),0,Spinor(5,-1,1))

        F40 = -ChainV2(Spinor(3,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

        F41 = -ChainB1(Spinor(3,1,2),0,e(2),0,Spinor(5,-1,1))

        F42 = ChainV1(Spinor(3,1,2),0,e(2),0,Spinor(5,-1,1))

        Pair1 = Pair(e(2),k(5))

        Pair2 = Pair(e(2),k(1))

        Pair3 = Pair(e(2),k(3))

        Pair4 = Pair(e(2),k(4))

        Sub45 = F27*F28 - F25*F31 + F10*(F14 + 2*F12*Pair1)

        Sub48 = -(F31*F32) + F28*F33 + F21*(F23 + 2*F20*Pair1)

        Sub384 = F17*F18 - F25*F26 + F27*F30

        Sub389 = F11*F13 - F26*F32 + F30*F33

        Abb1 = Pair2 - Pair3

        Abb2 = Pair2 - Pair4

        Sub46 = 2*F17*F19*Pair1 + Sub384

        Sub49 = 2*F11*F9*Pair1 + Sub389


        Sub27(HelAll(Neu(3)),Neu(4)) = 
     &   F21*F24*Sub25(Neu(3),Neu(4)) - F11*F15*Sub26(Neu(3),Neu(4))

        Sub28(HelAll(Neu(3)),Neu(4)) = 
     &   F10*F16*Sub25(Neu(3),Neu(4)) - F17*F22*Sub26(Neu(3),Neu(4))

        Sub29(HelAll(Neu(3)),Neu(4)) = 
     &   F10*(F14 + 2*F12*Pair2)*Sub25(Neu(3),Neu(4)) + 
     &    F17*(-F18 - 2*F19*Pair2)*Sub26(Neu(3),Neu(4))

        Sub30(HelAll(Neu(3)),Neu(4)) = 
     &   F21*(F23 + 2*F20*Pair2)*Sub25(Neu(3),Neu(4)) + 
     &    F11*(-F13 - 2*F9*Pair2)*Sub26(Neu(3),Neu(4))

        Sub31(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(-(4*CW2*Sub27(HelAll(Neu(3)),Neu(4))) + 
     &      4*SW2*Sub28(HelAll(Neu(3)),Neu(4)) + 
     &      Sub27(HelAll(Neu(3)),Neu(4)))

        Sub43(HelAll(Neu(3)),Neu(4)) = 
     &   (F21*F24 - F28*F29)*Sub25(Neu(3),Neu(4)) + 
     &    (-(F11*F15) + F29*F30)*Sub26(Neu(3),Neu(4))

        Sub44(HelAll(Neu(3)),Neu(4)) = 
     &   (F10*F16 - F28*F34)*Sub25(Neu(3),Neu(4)) + 
     &    (-(F17*F22) + F30*F34)*Sub26(Neu(3),Neu(4))

        Sub51(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(4*SW2*Sub43(HelAll(Neu(3)),Neu(4)) - 
     &      4*CW2*Sub44(HelAll(Neu(3)),Neu(4)) + 
     &      Sub44(HelAll(Neu(3)),Neu(4)))

        Sub215(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(4*SW2*Sub29(HelAll(Neu(3)),Neu(4)) - 
     &      4*CW2*Sub30(HelAll(Neu(3)),Neu(4)) + 
     &      Sub30(HelAll(Neu(3)),Neu(4)))

        Sub47(HelAll(Neu(3)),Neu(4)) = 
     &   Sub45*Sub25(Neu(3),Neu(4)) - Sub46*Sub26(Neu(3),Neu(4))

        Sub50(HelAll(Neu(3)),Neu(4)) = 
     &   Sub48*Sub25(Neu(3),Neu(4)) - Sub49*Sub26(Neu(3),Neu(4))

        Sub233(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(4*SW2*Sub47(HelAll(Neu(3)),Neu(4)) - 
     &      4*CW2*Sub50(HelAll(Neu(3)),Neu(4)) + 
     &      Sub50(HelAll(Neu(3)),Neu(4)))



        Sub32(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   -Sub215(HelAll(Neu(3)),Neu(4)) + 
     &    Mf(3,Gen(1))*Sub31(HelAll(Neu(3)),Neu(4))

        Sub52(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   Sub233(HelAll(Neu(3)),Neu(4)) + 
     &    Mf(3,Gen(1))*Sub51(HelAll(Neu(3)),Neu(4))


        LOOP(Sfe6, 1,2,1)

        Sub5(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F9*Sub3(Gen(1),Neu(3),Sfe6) - F12*Sub4(Gen(1),Neu(3),Sfe6)

        Sub21(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F15*Sub3(Gen(1),Neu(3),Sfe6) - F16*Sub4(Gen(1),Neu(3),Sfe6)

        Sub23(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   (F13 + 2*F9*Pair2)*Sub3(Gen(1),Neu(3),Sfe6) + 
     &    (-F14 - 2*F12*Pair2)*Sub4(Gen(1),Neu(3),Sfe6)

        Sub24(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   Mf(3,Gen(1))*Sub21(HelAll(Gen(1)),Neu(3),Sfe6) - 
     &    Sub23(HelAll(Gen(1)),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub17(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   F1*Sub11(Gen(1),Neu(4),Sfe6) - F4*Sub16(Gen(1),Neu(4),Sfe6)

        Sub18(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   F8*Sub11(Gen(1),Neu(4),Sfe6) - F7*Sub16(Gen(1),Neu(4),Sfe6)

        Sub19(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   (F5 + 2*F1*Pair2)*Sub11(Gen(1),Neu(4),Sfe6) + 
     &    (-F6 - 2*F4*Pair2)*Sub16(Gen(1),Neu(4),Sfe6)

        Sub20(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   Mf(3,Gen(1))*Sub18(HelAll(Gen(1)),Neu(4),Sfe6) - 
     &    Sub19(HelAll(Gen(1)),Neu(4),Sfe6)

        Sub2582(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   -(Sub20(HelAll(Gen(1)),Neu(4),Sfe6)/(S - Mf2(3,Gen(1)))) + 
     &    (2*Abb2*Sub17(HelAll(Gen(1)),Neu(4),Sfe6))/
     &     (T14 - Sub78(Gen(1),Sfe6))

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub15(HelAll(Gen(5)),Neu(3),Sfe6) = 
     &   F2*Sub12(Gen(5),Neu(3),Sfe6) - F3*Sub14(Gen(5),Neu(3),Sfe6)

        Sub36(HelAll(Gen(5)),Neu(3),Sfe6) = 
     &   F42*Sub12(Gen(5),Neu(3),Sfe6) - F41*Sub14(Gen(5),Neu(3),Sfe6)

        Sub39(HelAll(Gen(5)),Neu(3),Sfe6) = 
     &   (F40 + 2*F2*Pair1)*Sub12(Gen(5),Neu(3),Sfe6) + 
     &    (-F38 - 2*F3*Pair1)*Sub14(Gen(5),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub22(HelAll(Gen(5)),Neu(4),Sfe6) = 
     &   F10*Sub1(Gen(5),Neu(4),Sfe6) - F11*Sub8(Gen(5),Neu(4),Sfe6)

        Sub34(HelAll(Gen(5)),Neu(4),Sfe6) = 
     &   (F36 + 2*F10*Pair1)*Sub1(Gen(5),Neu(4),Sfe6) + 
     &    (-F35 - 2*F11*Pair1)*Sub8(Gen(5),Neu(4),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub9(HelAll(Gen(1)),Gen(5),Neu(3),Neu(4),Sfe6) = 
     &   Sub5(HelAll(Gen(1)),Neu(3),Sfe6)*
     &    (F10*Sub1(Gen(5),Neu(4),Sfe6) - F11*Sub8(Gen(5),Neu(4),Sfe6))

        Sub33(HelAll(Gen(1)),Gen(5),Neu(3),Neu(4),Sfe6) = 
     &   Sub5(HelAll(Gen(1)),Neu(3),Sfe6)*
     &    (F39*Sub1(Gen(5),Neu(4),Sfe6) - F37*Sub8(Gen(5),Neu(4),Sfe6))

        Sub35(HelAll(Gen(1)),Gen(5),Neu(3),Neu(4),Sfe6) = 
     &   Mf(3,Gen(5))*Sub33(HelAll(Gen(1)),Gen(5),Neu(3),Neu(4),Sfe6) - 
     &    Sub34(HelAll(Gen(5)),Neu(4),Sfe6)*
     &     Sub5(HelAll(Gen(1)),Neu(3),Sfe6)

        Sub38(HelAll(Gen(1)),Gen(5),Neu(3),Neu(4),Sfe6) = 
     &   (F1*Sub11(Gen(1),Neu(4),Sfe6) - F4*Sub16(Gen(1),Neu(4),Sfe6))*
     &    Sub36(HelAll(Gen(5)),Neu(3),Sfe6)

        Sub41(HelAll(Gen(1)),Gen(5),Neu(3),Neu(4),Sfe6) = 
     &   (F1*Sub11(Gen(1),Neu(4),Sfe6) - F4*Sub16(Gen(1),Neu(4),Sfe6))*
     &    Sub39(HelAll(Gen(5)),Neu(3),Sfe6)

        Sub42(HelAll(Gen(1)),Gen(5),Neu(3),Neu(4),Sfe6) = 
     &   Mf(3,Gen(5))*Sub38(HelAll(Gen(1)),Gen(5),Neu(3),Neu(4),Sfe6) - 
     &    Sub41(HelAll(Gen(1)),Gen(5),Neu(3),Neu(4),Sfe6)

        Sub2584(HelAll(Gen(1)),Gen(5),Neu(3),Neu(4),Sfe6) = 
     &   -((Sub22(HelAll(Gen(5)),Neu(4),Sfe6)*
     &         Sub24(HelAll(Gen(1)),Neu(3),Sfe6))/
     &       ((S - Mf2(3,Gen(1)))*
     &         (Sub2581(Gen(5),Sfe6) + Sub2583(Gen(1),Gen(5),Neu(3),Neu(4))))
     &       ) - Sub35(HelAll(Gen(1)),Gen(5),Neu(3),Neu(4),Sfe6)/
     &     ((Mf2(3,Gen(5)) + Sub1374(Gen(1),Gen(5),Neu(3),Neu(4)))*
     &       (T - Sub78(Gen(1),Sfe6)))

        ENDLOOP(Sfe6)

#include "virt_contains.h"

        end

