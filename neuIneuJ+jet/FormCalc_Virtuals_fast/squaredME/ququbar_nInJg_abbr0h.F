#if 0
* ququbar_nInJg_abbr0h.F
* abbreviations for {F[3, {Gen(1), Col1}], -F[3, {Gen(2), Col2}]} -> {F[11, {Neu(3)}], F[11, {Neu(4)}], V[5, {Glu5}]}
* generated by FormCalc 9.4 (7 Jun 2016) on 3-Jul-2017 14:15
#endif

#include "ququbar_nInJg_vars.h"
#include "virt_inline.h"
#include "virt_contains.h"


        subroutine ququbar_nInJg_abbr0h
        implicit none

#include "ququbar_nInJg_vars.h"
#include "virt_inline.h"

        F1 = ChainB0(Spinor(4,1,2),0,0,Spinor(1,1,1))

        F2 = -ChainV0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

        F3 = -ChainB1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

        F4 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

        F5 = ChainV0(Spinor(4,1,2),0,0,Spinor(1,1,1))

        F6 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

        F7 = ChainB0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

        F8 = ChainV1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

        F9 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

        F10 = -ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

        F11 = ChainV1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

        F12 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

        F13 = -ChainB1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

        F14 = ChainV2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

        F15 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

        F16 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

        F17 = ChainB0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

        F18 = -ChainV0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

        F19 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

        F20 = -ChainB1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

        F21 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

        F22 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F23 = -ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

        F24 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F25 = -ChainB1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

        F26 = -ChainB0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

        F27 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

        F28 = ChainV0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

        F29 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

        F30 = ChainV1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

        F31 = ChainV0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

        F32 = ChainB0(Spinor(3,1,2),0,0,Spinor(1,1,1))

        F33 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

        F34 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

        F35 = ChainV0(Spinor(3,1,2),0,0,Spinor(1,1,1))

        F36 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

        F37 = ChainV1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

        F38 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

        F39 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

        F40 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

        F41 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

        F42 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

        F43 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

        F44 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

        F45 = ChainV2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F46 = ChainV2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

        F47 = ChainV1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

        F48 = ChainB1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

        F49 = ChainB2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F50 = ChainB2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

        F51 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

        F52 = ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

        F53 = ChainB2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

        F54 = ChainV2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F55 = ChainV2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

        F56 = ChainB2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        Pair1 = Pair(ec(5),k(1))

        Pair2 = Pair(ec(5),k(4))

        Pair3 = Pair(ec(5),k(3))

        Pair4 = Pair(ec(5),k(2))

        Abb1 = Pair1 - Pair2

        Abb2 = Pair1 - Pair3

        Sub24(HelAll(Neu(3))) = F13*F15 - F1*(F16 - F4*MNeu(Neu(3)))

        Sub26(HelAll(Neu(3))) = F10*F11 - F5*(F12 - F6*MNeu(Neu(3)))

        Sub945(HelAll(Neu(3))) = 
     &   F15*F17*MNeu(Neu(3)) + F1*(F16 - F4*MNeu(Neu(3)))

        Sub52(HelAll(Neu(3))) = 2*Abb2*F35 + F45 - F46 + F48*MNeu(Neu(3))

        Sub53(HelAll(Neu(3))) = 2*Abb2*F32 + F49 - F50 + F47*MNeu(Neu(3))

        Sub23(HelAll(Neu(4))) = F11*F15 - F7*(F14 + F8*MNeu(Neu(4)))

        Sub27(HelAll(Neu(4))) = F10*F13 - F2*(F9 + F3*MNeu(Neu(4)))

        Sub57(HelAll(Neu(4))) = 2*Abb1*F5 + F54 - F55 + F52*MNeu(Neu(4))

        Sub58(HelAll(Neu(4))) = 2*Abb1*F1 - F53 + F56 + F51*MNeu(Neu(4))


        Sub21(HelAll(Neu(3)),Neu(4)) = 
     &   F3*F7*Sub19(Neu(3),Neu(4)) - F1*F6*Sub20(Neu(3),Neu(4))

        Sub22(HelAll(Neu(3)),Neu(4)) = 
     &   F4*F5*Sub19(Neu(3),Neu(4)) - F2*F8*Sub20(Neu(3),Neu(4))

        Sub25(HelAll(Neu(3)),Neu(4)) = 
     &   Sub19(Neu(3),Neu(4))*Sub23(HelAll(Neu(4))) - 
     &    Sub20(Neu(3),Neu(4))*Sub24(HelAll(Neu(3)))

        Sub28(HelAll(Neu(3)),Neu(4)) = 
     &   Sub19(Neu(3),Neu(4))*Sub26(HelAll(Neu(3))) - 
     &    Sub20(Neu(3),Neu(4))*Sub27(HelAll(Neu(4)))

        Sub29(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(-(4*CW2*Sub21(HelAll(Neu(3)),Neu(4))) + 
     &      4*SW2*Sub22(HelAll(Neu(3)),Neu(4)) + 
     &      Sub21(HelAll(Neu(3)),Neu(4)))

        Sub31(HelAll(Neu(3)),Neu(4)) = 
     &   (F21*F27 - F3*F7)*Sub19(Neu(3),Neu(4)) + 
     &    (-(F23*F27) + F1*F6)*Sub20(Neu(3),Neu(4))

        Sub32(HelAll(Neu(3)),Neu(4)) = 
     &   (F21*F31 - F4*F5)*Sub19(Neu(3),Neu(4)) + 
     &    (-(F23*F31) + F2*F8)*Sub20(Neu(3),Neu(4))

        Sub33(HelAll(Neu(3)),Neu(4)) = 
     &   F21*(F30 + F37) + F7*(F14 - 2*F28*(Pair1 + Pair4)) + 
     &    F15*(F22 + F18*MNeu(Neu(3))) - (F15*F17 - F7*F8)*MNeu(Neu(4))

        Sub36(HelAll(Neu(3)),Neu(4)) = 
     &   F21*(F20 + F25) + F5*(F12 - 2*F19*(Pair1 + Pair4)) + 
     &    (F10*F18 - F5*F6)*MNeu(Neu(3)) + F10*(F22 - F17*MNeu(Neu(4)))

        Sub39(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(4*SW2*Sub31(HelAll(Neu(3)),Neu(4)) - 
     &      4*CW2*Sub32(HelAll(Neu(3)),Neu(4)) + 
     &      Sub32(HelAll(Neu(3)),Neu(4)))

        Sub127(HelAll(Neu(3)),Neu(4)) = 
     &   F2*F3*MNeu(Neu(4)) + F10*(F17*MNeu(Neu(3)) - F18*MNeu(Neu(4)))

        Sub128(HelAll(Neu(3)),Neu(4)) = 
     &   F2*(F9 - 2*F26*(Pair1 + Pair4)) + 
     &    Sub127(HelAll(Neu(3)),Neu(4))

        Sub196(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(-(4*CW2*Sub25(HelAll(Neu(3)),Neu(4))) + 
     &      4*SW2*Sub28(HelAll(Neu(3)),Neu(4)) + 
     &      Sub25(HelAll(Neu(3)),Neu(4)))

        Sub37(HelAll(Neu(3)),Neu(4)) = 
     &   F10*F24 + F23*(F20 + F25) + Sub128(HelAll(Neu(3)),Neu(4))

        Sub38(HelAll(Neu(3)),Neu(4)) = 
     &   Sub19(Neu(3),Neu(4))*Sub36(HelAll(Neu(3)),Neu(4)) - 
     &    Sub20(Neu(3),Neu(4))*Sub37(HelAll(Neu(3)),Neu(4))

        Sub764(HelAll(Neu(3)),Neu(4)) = 
     &   -(F15*F18*MNeu(Neu(4))) + Sub945(HelAll(Neu(3)))

        Sub745(HelAll(Neu(3)),Neu(4)) = 
     &   F23*(F30 + F37) + Sub764(HelAll(Neu(3)),Neu(4))

        Sub34(HelAll(Neu(3)),Neu(4)) = 
     &   F15*F24 - 2*F1*F29*(Pair1 + Pair4) + 
     &    Sub745(HelAll(Neu(3)),Neu(4))

        Sub35(HelAll(Neu(3)),Neu(4)) = 
     &   Sub19(Neu(3),Neu(4))*Sub33(HelAll(Neu(3)),Neu(4)) - 
     &    Sub20(Neu(3),Neu(4))*Sub34(HelAll(Neu(3)),Neu(4))

        Sub143(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(-(4*CW2*Sub35(HelAll(Neu(3)),Neu(4))) + 
     &      4*SW2*Sub38(HelAll(Neu(3)),Neu(4)) + 
     &      Sub35(HelAll(Neu(3)),Neu(4)))



        Sub30(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   Sub196(HelAll(Neu(3)),Neu(4)) + 
     &    Mf(3,Gen(1))*Sub29(HelAll(Neu(3)),Neu(4))

        Sub40(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   -Sub143(HelAll(Neu(3)),Neu(4)) + 
     &    Mf(3,Gen(1))*Sub39(HelAll(Neu(3)),Neu(4))


        LOOP(Sfe6, 1,2,1)

        Sub15(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F35*Sub12(Gen(1),Neu(3),Sfe6) - F32*Sub14(Gen(1),Neu(3),Sfe6)

        Sub50(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F47*Sub12(Gen(1),Neu(3),Sfe6) - F48*Sub14(Gen(1),Neu(3),Sfe6)

        Sub54(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   Sub12(Gen(1),Neu(3),Sfe6)*Sub52(HelAll(Neu(3))) - 
     &    Sub14(Gen(1),Neu(3),Sfe6)*Sub53(HelAll(Neu(3)))

        Sub55(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   Mf(3,Gen(1))*Sub50(HelAll(Gen(1)),Neu(3),Sfe6) + 
     &    Sub54(HelAll(Gen(1)),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub48(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   F5*Sub1(Gen(1),Neu(4),Sfe6) - F1*Sub8(Gen(1),Neu(4),Sfe6)

        Sub59(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   Sub1(Gen(1),Neu(4),Sfe6)*Sub57(HelAll(Neu(4))) - 
     &    Sub58(HelAll(Neu(4)))*Sub8(Gen(1),Neu(4),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub5(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   F29*Sub3(Gen(2),Neu(3),Sfe6) - F19*Sub4(Gen(2),Neu(3),Sfe6)

        Sub44(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   F6*Sub3(Gen(2),Neu(3),Sfe6) - F4*Sub4(Gen(2),Neu(3),Sfe6)

        Sub47(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   (F16 - F42 - F4*MNeu(Neu(3)))*Sub3(Gen(2),Neu(3),Sfe6) - 
     &    (F12 - F44 - F6*MNeu(Neu(3)))*Sub4(Gen(2),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub41(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   (F34 - F36 - F39*MNeu(Neu(4)))*Sub11(Gen(2),Neu(4),Sfe6) + 
     &    (F38 - F40 + F33*MNeu(Neu(4)))*Sub17(Gen(2),Neu(4),Sfe6)

        Sub51(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   F41*Sub11(Gen(2),Neu(4),Sfe6) - F43*Sub17(Gen(2),Neu(4),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub9(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub5(HelAll(Gen(2)),Neu(3),Sfe6)*
     &    (F5*Sub1(Gen(1),Neu(4),Sfe6) - F1*Sub8(Gen(1),Neu(4),Sfe6))

        Sub18(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub15(HelAll(Gen(1)),Neu(3),Sfe6)*
     &    (F41*Sub11(Gen(2),Neu(4),Sfe6) - F43*Sub17(Gen(2),Neu(4),Sfe6))

        Sub42(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub15(HelAll(Gen(1)),Neu(3),Sfe6)*
     &    (F33*Sub11(Gen(2),Neu(4),Sfe6) - F39*Sub17(Gen(2),Neu(4),Sfe6))

        Sub43(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub15(HelAll(Gen(1)),Neu(3),Sfe6)*
     &     Sub41(HelAll(Gen(2)),Neu(4),Sfe6) - 
     &    Mf(3,Gen(2))*Sub42(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6)

        Sub46(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub44(HelAll(Gen(2)),Neu(3),Sfe6)*
     &    (F5*Sub1(Gen(1),Neu(4),Sfe6) - F1*Sub8(Gen(1),Neu(4),Sfe6))

        Sub49(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Mf(3,Gen(2))*Sub46(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) - 
     &    Sub47(HelAll(Gen(2)),Neu(3),Sfe6)*
     &     Sub48(HelAll(Gen(1)),Neu(4),Sfe6)

        Sub56(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub5(HelAll(Gen(2)),Neu(3),Sfe6)*
     &    (F51*Sub1(Gen(1),Neu(4),Sfe6) - F52*Sub8(Gen(1),Neu(4),Sfe6))

        Sub60(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Mf(3,Gen(1))*Sub56(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) + 
     &    Sub5(HelAll(Gen(2)),Neu(3),Sfe6)*
     &     Sub59(HelAll(Gen(1)),Neu(4),Sfe6)

        Sub3072(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   (2*Abb2*Sub18(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6))/
     &     (T24 - Sub3071(Gen(2),Sfe6)) + 
     &    Sub43(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6)/
     &     (Mf2(3,Gen(2)) + Sub3070(Gen(1),Gen(2),Neu(3),Neu(4)))

        Sub3073(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   (Sub51(HelAll(Gen(2)),Neu(4),Sfe6)*
     &       Sub55(HelAll(Gen(1)),Neu(3),Sfe6))/
     &     (T24 - Sub3071(Gen(2),Sfe6)) - 
     &    Sub60(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6)/
     &     (U - Sub3071(Gen(2),Sfe6))

        Sub3074(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   -(Sub49(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6)/
     &       (Mf2(3,Gen(2)) + Sub3070(Gen(1),Gen(2),Neu(3),Neu(4)))) + 
     &    (2*Abb1*Sub9(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6))/
     &     (U - Sub3071(Gen(2),Sfe6))

        ENDLOOP(Sfe6)

#include "virt_contains.h"

        end

