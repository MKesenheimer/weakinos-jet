#if 0
* qubarg_nInJqubar_abbr0s.F
* abbreviations for {-F[3, {Gen(1), Col1}], V[5, {Glu2}]} -> {F[11, {Neu(3)}], F[11, {Neu(4)}], -F[3, {Gen(5), Col5}]}
* generated by FormCalc 9.4 (7 Jun 2016) on 6-Mar-2017 19:04
#endif

#include "qubarg_nInJqubar_vars.h"
#include "virt_inline.h"
#include "virt_contains.h"


        subroutine qubarg_nInJqubar_abbr0s
        implicit none

#include "qubarg_nInJqubar_vars.h"
#include "virt_inline.h"

        MatSUN(1,1) = 4

        Sub2(Neu(3)) = 3*CW*ZNeu(Neu(3),2) + SW*ZNeu(Neu(3),1)

        Sub10(Neu(4)) = 3*CW*ZNeu(Neu(4),2) + SW*ZNeu(Neu(4),1)


        Sub1074(Gen(1),Gen(5)) = S - Mf2(3,Gen(1)) - Mf2(3,Gen(5))


        LOOP(Sfe6, 1,2,1)

        Sub81(Gen(1),Sfe6) = 
     &   -(cI*(MSf(Sfe6,3,Gen(1))*WSf(Sfe6,3,Gen(1)))) + 
     &    MSf2(Sfe6,3,Gen(1))

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub17471(Gen(5),Sfe6) = 
     &   -(cI*(MSf(Sfe6,3,Gen(5))*WSf(Sfe6,3,Gen(5)))) + 
     &    MSf2(Sfe6,3,Gen(5))

        ENDLOOP(Sfe6)


        Sub27(Neu(3),Neu(4)) = 
     &   ZNeu(Neu(4),3)*ZNeuC(Neu(3),3) - ZNeu(Neu(4),4)*ZNeuC(Neu(3),4)

        Sub28(Neu(3),Neu(4)) = 
     &   ZNeu(Neu(3),3)*ZNeuC(Neu(4),3) - ZNeu(Neu(3),4)*ZNeuC(Neu(4),4)


        LOOP(Sfe6, 1,2,1)

        Sub3(Gen(1),Neu(3),Sfe6) = 
     &   MW*(SB*Sub2(Neu(3))*USfC(Sfe6,1,3,Gen(1))) + 
     &    3*CW*(Mf(3,Gen(1))*USfC(Sfe6,2,3,Gen(1))*ZNeu(Neu(3),4))

        Sub4(Gen(1),Neu(3),Sfe6) = 
     &   4*MW*(SB*SW*USfC(Sfe6,2,3,Gen(1))*ZNeuC(Neu(3),1)) - 
     &    3*CW*(Mf(3,Gen(1))*USfC(Sfe6,1,3,Gen(1))*ZNeuC(Neu(3),4))

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub11(Gen(1),Neu(4),Sfe6) = 
     &   MW*(SB*Sub10(Neu(4))*USfC(Sfe6,1,3,Gen(1))) + 
     &    3*CW*(Mf(3,Gen(1))*USfC(Sfe6,2,3,Gen(1))*ZNeu(Neu(4),4))

        Sub16(Gen(1),Neu(4),Sfe6) = 
     &   4*MW*(SB*SW*USfC(Sfe6,2,3,Gen(1))*ZNeuC(Neu(4),1)) - 
     &    3*CW*(Mf(3,Gen(1))*USfC(Sfe6,1,3,Gen(1))*ZNeuC(Neu(4),4))

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub12(Gen(5),Neu(3),Sfe6) = 
     &   4*MW*(SB*SW*USf(Sfe6,2,3,Gen(5))*ZNeu(Neu(3),1)) - 
     &    3*CW*(Mf(3,Gen(5))*USf(Sfe6,1,3,Gen(5))*ZNeu(Neu(3),4))

        Sub13(Gen(5),Neu(3),Sfe6) = 
     &   MW*(SB*USf(Sfe6,1,3,Gen(5))*ZNeuC(Neu(3),2)) + 
     &    Mf(3,Gen(5))*USf(Sfe6,2,3,Gen(5))*ZNeuC(Neu(3),4)

        Sub14(Gen(5),Neu(3),Sfe6) = 
     &   3*CW*Sub13(Gen(5),Neu(3),Sfe6) + 
     &    MW*(SB*SW*USf(Sfe6,1,3,Gen(5))*ZNeuC(Neu(3),1))

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub1(Gen(5),Neu(4),Sfe6) = 
     &   4*MW*(SB*SW*USf(Sfe6,2,3,Gen(5))*ZNeu(Neu(4),1)) - 
     &    3*CW*(Mf(3,Gen(5))*USf(Sfe6,1,3,Gen(5))*ZNeu(Neu(4),4))

        Sub7(Gen(5),Neu(4),Sfe6) = 
     &   MW*(SB*USf(Sfe6,1,3,Gen(5))*ZNeuC(Neu(4),2)) + 
     &    Mf(3,Gen(5))*USf(Sfe6,2,3,Gen(5))*ZNeuC(Neu(4),4)

        Sub8(Gen(5),Neu(4),Sfe6) = 
     &   3*CW*Sub7(Gen(5),Neu(4),Sfe6) + 
     &    MW*(SB*SW*USf(Sfe6,1,3,Gen(5))*ZNeuC(Neu(4),1))

        ENDLOOP(Sfe6)

#include "virt_contains.h"

        end

