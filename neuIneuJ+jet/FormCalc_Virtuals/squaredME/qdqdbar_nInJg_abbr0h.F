#if 0
* qdqdbar_nInJg_abbr0h.F
* abbreviations for {F[4, {Gen(1), Col1}], -F[4, {Gen(2), Col2}]} -> {F[11, {Neu(3)}], F[11, {Neu(4)}], V[5, {Glu5}]}
* generated by FormCalc 9.4 (7 Jun 2016) on 2-Mar-2017 7:51
#endif

#include "qdqdbar_nInJg_vars.h"
#include "virt_inline.h"
#include "virt_contains.h"


        subroutine qdqdbar_nInJg_abbr0h
        implicit none

#include "qdqdbar_nInJg_vars.h"
#include "virt_inline.h"

        F1 = ChainB0(Spinor(4,1,2),0,0,Spinor(1,1,1))

        F2 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

        F3 = -ChainV0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

        F4 = -ChainB1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

        F5 = ChainV0(Spinor(4,1,2),0,0,Spinor(1,1,1))

        F6 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

        F7 = ChainB0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

        F8 = ChainV1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

        F9 = -ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

        F10 = -ChainB1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

        F11 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

        F12 = ChainV1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

        F13 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

        F14 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

        F15 = ChainV2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

        F16 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

        F17 = ChainB0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

        F18 = -ChainV0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

        F19 = -ChainB1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

        F20 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

        F21 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

        F22 = -ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

        F23 = ChainV0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

        F24 = -ChainB0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

        F25 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

        F26 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

        F27 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F28 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F29 = ChainV1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

        F30 = ChainV0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

        F31 = ChainV1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

        F32 = -ChainB1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

        F33 = ChainV0(Spinor(3,1,2),0,0,Spinor(1,1,1))

        F34 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

        F35 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

        F36 = ChainB0(Spinor(3,1,2),0,0,Spinor(1,1,1))

        F37 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

        F38 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

        F39 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

        F40 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

        F41 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

        F42 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

        F43 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

        F44 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

        F45 = ChainV2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F46 = ChainB1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

        F47 = ChainV2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

        F48 = ChainV1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

        F49 = ChainB2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F50 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

        F51 = ChainB2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

        F52 = ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

        F53 = ChainB2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

        F54 = ChainV2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F55 = ChainV2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

        F56 = ChainB2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        Pair1 = Pair(ec(5),k(1))

        Pair2 = Pair(ec(5),k(4))

        Pair3 = Pair(ec(5),k(3))

        Pair4 = Pair(ec(5),k(2))

        Abb1 = Pair1 - Pair2

        Abb2 = Pair1 - Pair3

        Sub35(HelAll(Neu(3))) = F10*F14 - F1*(F16 - F2*MNeu(Neu(3)))

        Sub37(HelAll(Neu(3))) = F12*F9 - F5*(F13 - F6*MNeu(Neu(3)))

        Sub788(HelAll(Neu(3))) = 
     &   F14*F17*MNeu(Neu(3)) + F1*(F16 - F2*MNeu(Neu(3)))

        Sub43(HelAll(Neu(3))) = 2*Abb2*F33 + F45 - F47 + F46*MNeu(Neu(3))

        Sub44(HelAll(Neu(3))) = 2*Abb2*F36 + F49 - F51 + F48*MNeu(Neu(3))

        Sub34(HelAll(Neu(4))) = F12*F14 - F7*(F15 + F8*MNeu(Neu(4)))

        Sub38(HelAll(Neu(4))) = F10*F9 - F3*(F11 + F4*MNeu(Neu(4)))

        Sub51(HelAll(Neu(4))) = 2*Abb1*F5 + F54 - F55 + F52*MNeu(Neu(4))

        Sub52(HelAll(Neu(4))) = 2*Abb1*F1 - F53 + F56 + F50*MNeu(Neu(4))


        Sub19(HelAll(Neu(3)),Neu(4)) = 
     &   (F20*F26 - F4*F7)*Sub17(Neu(3),Neu(4)) + 
     &    (-(F22*F26) + F1*F6)*Sub18(Neu(3),Neu(4))

        Sub20(HelAll(Neu(3)),Neu(4)) = 
     &   (F20*F30 - F2*F5)*Sub17(Neu(3),Neu(4)) + 
     &    (-(F22*F30) + F3*F8)*Sub18(Neu(3),Neu(4))

        Sub21(HelAll(Neu(3)),Neu(4)) = 
     &   F20*(F29 + F31) + F7*(F15 - 2*F23*(Pair1 + Pair4)) + 
     &    F14*(F27 + F18*MNeu(Neu(3))) - (F14*F17 - F7*F8)*MNeu(Neu(4))

        Sub24(HelAll(Neu(3)),Neu(4)) = 
     &   F20*(F19 + F32) + F5*(F13 - 2*F21*(Pair1 + Pair4)) - 
     &    (F5*F6 - F18*F9)*MNeu(Neu(3)) + F9*(F27 - F17*MNeu(Neu(4)))

        Sub27(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(2*SW2*Sub19(HelAll(Neu(3)),Neu(4)) + 
     &      (-1 - 2*CW2)*Sub20(HelAll(Neu(3)),Neu(4)))

        Sub32(HelAll(Neu(3)),Neu(4)) = 
     &   F4*F7*Sub17(Neu(3),Neu(4)) - F1*F6*Sub18(Neu(3),Neu(4))

        Sub33(HelAll(Neu(3)),Neu(4)) = 
     &   F2*F5*Sub17(Neu(3),Neu(4)) - F3*F8*Sub18(Neu(3),Neu(4))

        Sub36(HelAll(Neu(3)),Neu(4)) = 
     &   Sub17(Neu(3),Neu(4))*Sub34(HelAll(Neu(4))) - 
     &    Sub18(Neu(3),Neu(4))*Sub35(HelAll(Neu(3)))

        Sub39(HelAll(Neu(3)),Neu(4)) = 
     &   Sub17(Neu(3),Neu(4))*Sub37(HelAll(Neu(3))) - 
     &    Sub18(Neu(3),Neu(4))*Sub38(HelAll(Neu(4)))

        Sub40(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(2*CW2*Sub32(HelAll(Neu(3)),Neu(4)) - 
     &      2*SW2*Sub33(HelAll(Neu(3)),Neu(4)) + 
     &      Sub32(HelAll(Neu(3)),Neu(4)))

        Sub134(HelAll(Neu(3)),Neu(4)) = 
     &   F17*F9*MNeu(Neu(3)) + (F3*F4 - F18*F9)*MNeu(Neu(4))

        Sub176(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(2*CW2*Sub36(HelAll(Neu(3)),Neu(4)) - 
     &      2*SW2*Sub39(HelAll(Neu(3)),Neu(4)) + 
     &      Sub36(HelAll(Neu(3)),Neu(4)))

        Sub625(HelAll(Neu(3)),Neu(4)) = F11*F3 + Sub134(HelAll(Neu(3)),Neu(4))

        Opt3(HelAll(Neu(3)),Neu(4)) = 
     &   F22*(F19 + F32) + F28*F9 + Sub625(HelAll(Neu(3)),Neu(4))

        Sub25(HelAll(Neu(3)),Neu(4)) = 
     &   -2*F24*F3*(Pair1 + Pair4) + Opt3(HelAll(Neu(3)),Neu(4))

        Sub26(HelAll(Neu(3)),Neu(4)) = 
     &   Sub17(Neu(3),Neu(4))*Sub24(HelAll(Neu(3)),Neu(4)) - 
     &    Sub18(Neu(3),Neu(4))*Sub25(HelAll(Neu(3)),Neu(4))

        Sub622(HelAll(Neu(3)),Neu(4)) = 
     &   -(F14*F18*MNeu(Neu(4))) + Sub788(HelAll(Neu(3)))

        Sub1100(HelAll(Neu(3)),Neu(4)) = 
     &   F22*(F29 + F31) + Sub622(HelAll(Neu(3)),Neu(4))

        Sub22(HelAll(Neu(3)),Neu(4)) = 
     &   F14*F28 - 2*F1*F25*(Pair1 + Pair4) + 
     &    Sub1100(HelAll(Neu(3)),Neu(4))

        Sub23(HelAll(Neu(3)),Neu(4)) = 
     &   Sub17(Neu(3),Neu(4))*Sub21(HelAll(Neu(3)),Neu(4)) - 
     &    Sub18(Neu(3),Neu(4))*Sub22(HelAll(Neu(3)),Neu(4))



        Sub41(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   Sub176(HelAll(Neu(3)),Neu(4)) + 
     &    Mf(4,Gen(1))*Sub40(HelAll(Neu(3)),Neu(4))

        Sub28(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   1/SW2*(2*CW2*Sub23(HelAll(Neu(3)),Neu(4)) - 
     &      SW2*(2*Sub26(HelAll(Neu(3)),Neu(4)) - 
     &         Mf(4,Gen(1))*Sub27(HelAll(Neu(3)),Neu(4))) + 
     &      Sub23(HelAll(Neu(3)),Neu(4)))


        LOOP(Sfe6, 1,2,1)

        Sub4(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F33*Sub1(Gen(1),Neu(3),Sfe6) + F36*Sub3(Gen(1),Neu(3),Sfe6)

        Sub42(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F48*Sub1(Gen(1),Neu(3),Sfe6) + F46*Sub3(Gen(1),Neu(3),Sfe6)

        Sub45(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   Sub1(Gen(1),Neu(3),Sfe6)*Sub43(HelAll(Neu(3))) + 
     &    Sub3(Gen(1),Neu(3),Sfe6)*Sub44(HelAll(Neu(3)))

        Sub46(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   Mf(4,Gen(1))*Sub42(HelAll(Gen(1)),Neu(3),Sfe6) + 
     &    Sub45(HelAll(Gen(1)),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub16(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   F5*Sub13(Gen(1),Neu(4),Sfe6) + F1*Sub15(Gen(1),Neu(4),Sfe6)

        Sub50(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   F50*Sub13(Gen(1),Neu(4),Sfe6) + F52*Sub15(Gen(1),Neu(4),Sfe6)

        Sub53(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   Sub13(Gen(1),Neu(4),Sfe6)*Sub51(HelAll(Neu(4))) + 
     &    Sub15(Gen(1),Neu(4),Sfe6)*Sub52(HelAll(Neu(4)))

        Sub54(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   Mf(4,Gen(1))*Sub50(HelAll(Gen(1)),Neu(4),Sfe6) + 
     &    Sub53(HelAll(Gen(1)),Neu(4),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub12(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   F25*Sub10(Gen(2),Neu(3),Sfe6) + F21*Sub11(Gen(2),Neu(3),Sfe6)

        Sub29(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   F6*Sub10(Gen(2),Neu(3),Sfe6) + F2*Sub11(Gen(2),Neu(3),Sfe6)

        Sub30(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   (F16 - F41 - F2*MNeu(Neu(3)))*Sub10(Gen(2),Neu(3),Sfe6) + 
     &    (F13 - F44 - F6*MNeu(Neu(3)))*Sub11(Gen(2),Neu(3),Sfe6)

        Sub31(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   Mf(4,Gen(2))*Sub29(HelAll(Gen(2)),Neu(3),Sfe6) - 
     &    Sub30(HelAll(Gen(2)),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub8(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   F39*Sub6(Gen(2),Neu(4),Sfe6) + F43*Sub7(Gen(2),Neu(4),Sfe6)

        Sub47(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   F35*Sub6(Gen(2),Neu(4),Sfe6) + F34*Sub7(Gen(2),Neu(4),Sfe6)

        Sub48(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   (F37 - F38 - F34*MNeu(Neu(4)))*Sub6(Gen(2),Neu(4),Sfe6) - 
     &    (F40 - F42 + F35*MNeu(Neu(4)))*Sub7(Gen(2),Neu(4),Sfe6)

        Sub49(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   Mf(4,Gen(2))*Sub47(HelAll(Gen(2)),Neu(4),Sfe6) - 
     &    Sub48(HelAll(Gen(2)),Neu(4),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub2645(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   (2*Abb1*Sub12(HelAll(Gen(2)),Neu(3),Sfe6))/
     &     (U - Sub2644(Gen(2),Sfe6)) - 
     &    Sub31(HelAll(Gen(2)),Neu(3),Sfe6)/
     &     (Mf2(4,Gen(2)) + Sub2643(Gen(1),Gen(2),Neu(3),Neu(4)))

        Sub2646(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   -(Sub46(HelAll(Gen(1)),Neu(3),Sfe6)/
     &       (Mf2(4,Gen(1)) + Sub1467(Gen(1),Gen(2),Neu(3),Neu(4)))) + 
     &    (2*Abb2*Sub4(HelAll(Gen(1)),Neu(3),Sfe6))/
     &     (T - Sub524(Gen(1),Sfe6))

        ENDLOOP(Sfe6)

#include "virt_contains.h"

        end

