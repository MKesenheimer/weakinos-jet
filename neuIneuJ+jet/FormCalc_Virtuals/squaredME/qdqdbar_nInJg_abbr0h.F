#if 0
* qdqdbar_nInJg_abbr0h.F
* abbreviations for {F[4, {Gen(1), Col1}], -F[4, {Gen(2), Col2}]} -> {F[11, {Neu(3)}], F[11, {Neu(4)}], V[5, {Glu5}]}
* generated by FormCalc 9.4 (7 Jun 2016) on 17-Feb-2017 18:16
#endif

#include "qdqdbar_nInJg_vars.h"
#include "virt_inline.h"
#include "virt_contains.h"


        subroutine qdqdbar_nInJg_abbr0h
        implicit none

#include "qdqdbar_nInJg_vars.h"
#include "virt_inline.h"

        F1 = -ChainV0(Spinor(3,-1,1),1,0,Spinor(1,1,1))

        F2 = ChainB1(Spinor(4,1,2),0,ec(5),1,Spinor(2,-1,2))

        F3 = ChainB0(Spinor(3,-1,1),1,0,Spinor(1,1,1))

        F4 = -ChainV1(Spinor(4,1,2),0,ec(5),1,Spinor(2,-1,2))

        F5 = ChainB0(Spinor(4,1,2),0,0,Spinor(1,1,1))

        F6 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

        F7 = ChainV0(Spinor(4,1,2),0,0,Spinor(1,1,1))

        F8 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

        F9 = -ChainB0(Spinor(4,1,2),0,1,Spinor(2,-1,2))

        F10 = -ChainB2(Spinor(4,1,2),0,ec(5),k(3),1,Spinor(2,-1,2))

        F11 = ChainV1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

        F12 = -ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

        F13 = -ChainB1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

        F14 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

        F15 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

        F16 = ChainV0(Spinor(4,1,2),0,1,Spinor(2,-1,2))

        F17 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

        F18 = ChainV2(Spinor(4,1,2),0,ec(5),k(3),1,Spinor(2,-1,2))

        F19 = -ChainV0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

        F20 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

        F21 = ChainV0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

        F22 = ChainB0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

        F23 = -ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

        F24 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

        F25 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

        F26 = -ChainB1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

        F27 = -ChainB1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

        F28 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F29 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F30 = ChainV1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

        F31 = ChainV1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

        F32 = ChainV0(Spinor(3,1,2),0,0,Spinor(1,1,1))

        F33 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

        F34 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

        F35 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

        F36 = ChainB0(Spinor(3,1,2),0,0,Spinor(1,1,1))

        F37 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

        F38 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

        F39 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

        F40 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

        F41 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

        F42 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

        F43 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

        F44 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

        F45 = ChainV2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

        F46 = ChainV1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

        F47 = ChainB2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F48 = ChainB1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

        F49 = ChainB2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

        F50 = ChainV2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F51 = ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

        F52 = ChainV2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F53 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

        F54 = ChainB2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F55 = ChainV2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

        F56 = ChainB2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

        Pair1 = Pair(ec(5),k(1))

        Pair2 = Pair(ec(5),k(4))

        Pair3 = Pair(ec(5),k(3))

        Pair4 = Pair(ec(5),k(2))

        Sub32 = F18 + F16*(-2*Pair3 + 2*(Pair1 + Pair4))

        Sub37 = F10 + F9*(-2*Pair3 + 2*(Pair1 + Pair4))

        Abb1 = Pair1 - Pair2

        Abb2 = Pair1 - Pair3

        Sub816(HelAll(Gen(1))) = F11*F12 - F14*F7 - F3*F4*Mf(4,Gen(1))

        Sub1477(HelAll(Gen(1))) = F13*F15 - F1*F2*Mf(4,Gen(1))

        Sub1482(HelAll(Gen(1))) = F12*F13 - F5*F6*Mf(4,Gen(1))

        Sub807(HelAll(Gen(1))) = -(F17*F5) + Sub1477(HelAll(Gen(1)))

        Sub819(HelAll(Gen(1))) = 
     &   F1*(F10 - 2*F9*Pair3) + Sub1482(HelAll(Gen(1)))

        Sub2082(HelAll(Gen(2))) = F15*F28 + (F23*F24 - F5*F6)*Mf(4,Gen(2))

        Sub2090(HelAll(Gen(2))) = 
     &   F12*F28 + (-(F1*F2) + F21*F23)*Mf(4,Gen(2))

        Sub10001(HelAll(Neu(3))) = 
     &   F20*(F30 + F31) + F15*(F29 + F19*MNeu(Neu(3)))

        Sub10600(HelAll(Neu(3))) = F23*(F26 + F27) + F12*F22*MNeu(Neu(3))

        Sub25044(HelAll(Neu(3))) = 2*Abb2*F32 - F45 + F48*MNeu(Neu(3))

        Sub25054(HelAll(Neu(3))) = 2*Abb2*F36 - F49 + F46*MNeu(Neu(3))

        Sub46(HelAll(Neu(3))) = F50 + Sub25044(HelAll(Neu(3)))

        Sub47(HelAll(Neu(3))) = F47 + Sub25054(HelAll(Neu(3)))

        Sub21(HelAll(Neu(4))) = F18 - 2*F16*Pair3 - F2*MNeu(Neu(4))

        Sub24935(HelAll(Neu(4))) = F55 - 2*Abb1*F7 - F51*MNeu(Neu(4))

        Sub24962(HelAll(Neu(4))) = 2*Abb1*F5 - F56 + F53*MNeu(Neu(4))

        Sub54(HelAll(Neu(4))) = F52 - Sub24935(HelAll(Neu(4)))

        Sub55(HelAll(Neu(4))) = F54 + Sub24962(HelAll(Neu(4)))


        Sub25(HelAll(Gen(1)),Neu(3)) = 
     &   F6*F7*MNeu(Neu(3)) + Sub816(HelAll(Gen(1)))

        Sub23(HelAll(Gen(1)),Neu(3)) = 
     &   F5*F8*MNeu(Neu(3)) + Sub807(HelAll(Gen(1)))



        Sub22(HelAll(Gen(1)),Neu(4)) = 
     &   F11*F15 - F7*F8*Mf(4,Gen(1)) + F3*Sub21(HelAll(Neu(4)))

        Sub26(HelAll(Gen(1)),Neu(4)) = 
     &   -(F1*F4*MNeu(Neu(4))) + Sub819(HelAll(Gen(1)))



        Sub19(HelAll(Neu(3)),Neu(4)) = 
     &   F7*F8*Sub17(Neu(3),Neu(4)) - F1*F2*Sub18(Neu(3),Neu(4))

        Sub20(HelAll(Neu(3)),Neu(4)) = 
     &   F3*F4*Sub17(Neu(3),Neu(4)) - F5*F6*Sub18(Neu(3),Neu(4))

        Sub28(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(2*SW2*Sub19(HelAll(Neu(3)),Neu(4)) + 
     &      (-1 - 2*CW2)*Sub20(HelAll(Neu(3)),Neu(4)))

        Sub30(HelAll(Neu(3)),Neu(4)) = 
     &   (F20*F21 - F7*F8)*Sub17(Neu(3),Neu(4)) + 
     &    (F1*F2 - F21*F23)*Sub18(Neu(3),Neu(4))

        Sub31(HelAll(Neu(3)),Neu(4)) = 
     &   (F20*F24 - F3*F4)*Sub17(Neu(3),Neu(4)) + 
     &    (-(F23*F24) + F5*F6)*Sub18(Neu(3),Neu(4))

        Sub40(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(2*CW2*Sub30(HelAll(Neu(3)),Neu(4)) - 
     &      2*SW2*Sub31(HelAll(Neu(3)),Neu(4)) + 
     &      Sub30(HelAll(Neu(3)),Neu(4)))

        Sub1254(HelAll(Neu(3)),Neu(4)) = 
     &   -(F5*F8*MNeu(Neu(3))) + 
     &    F15*(F22*MNeu(Neu(3)) - F19*MNeu(Neu(4)))

        Sub10145(HelAll(Neu(3)),Neu(4)) = 
     &   F5*(F17 - 2*F34*(Pair1 + Pair4)) + 
     &    Sub1254(HelAll(Neu(3)),Neu(4))



        Sub24(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   Sub17(Neu(3),Neu(4))*Sub22(HelAll(Gen(1)),Neu(4)) - 
     &    Sub18(Neu(3),Neu(4))*Sub23(HelAll(Gen(1)),Neu(3))

        Sub27(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   Sub17(Neu(3),Neu(4))*Sub25(HelAll(Gen(1)),Neu(3)) - 
     &    Sub18(Neu(3),Neu(4))*Sub26(HelAll(Gen(1)),Neu(4))

        Sub4151(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   1/SW2*(2*CW2*Sub24(HelAll(Gen(1)),Neu(3),Neu(4)) - 
     &      SW2*(2*Sub27(HelAll(Gen(1)),Neu(3),Neu(4)) + 
     &         Mf(4,Gen(1))*Sub28(HelAll(Neu(3)),Neu(4))) + 
     &      Sub24(HelAll(Gen(1)),Neu(3),Neu(4)))

        Sub29(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   -Sub4151(HelAll(Gen(1)),Neu(3),Neu(4))


        LOOP(Sfe6, 1,2,1)

        Sub4(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F32*Sub1(Gen(1),Neu(3),Sfe6) + F36*Sub3(Gen(1),Neu(3),Sfe6)

        Sub45(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F46*Sub1(Gen(1),Neu(3),Sfe6) + F48*Sub3(Gen(1),Neu(3),Sfe6)

        Sub48(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   Sub1(Gen(1),Neu(3),Sfe6)*Sub46(HelAll(Neu(3))) + 
     &    Sub3(Gen(1),Neu(3),Sfe6)*Sub47(HelAll(Neu(3)))

        Sub49(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   Mf(4,Gen(1))*Sub45(HelAll(Gen(1)),Neu(3),Sfe6) + 
     &    Sub48(HelAll(Gen(1)),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub16(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   F7*Sub13(Gen(1),Neu(4),Sfe6) + F5*Sub15(Gen(1),Neu(4),Sfe6)

        Sub53(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   F53*Sub13(Gen(1),Neu(4),Sfe6) + F51*Sub15(Gen(1),Neu(4),Sfe6)

        Sub56(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   Sub13(Gen(1),Neu(4),Sfe6)*Sub54(HelAll(Neu(4))) + 
     &    Sub15(Gen(1),Neu(4),Sfe6)*Sub55(HelAll(Neu(4)))

        Sub57(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   Mf(4,Gen(1))*Sub53(HelAll(Gen(1)),Neu(4),Sfe6) + 
     &    Sub56(HelAll(Gen(1)),Neu(4),Sfe6)

        ENDLOOP(Sfe6)


        Opt4(HelAll(Gen(2)),Neu(3),Neu(4)) = 
     &   F20*(F26 + F27) + (F20*F21 - F7*F8)*Mf(4,Gen(2)) + 
     &    (F12*F19 - F6*F7)*MNeu(Neu(3)) + F12*(F29 - F22*MNeu(Neu(4)))

        Sub36(HelAll(Gen(2)),Neu(3),Neu(4)) = 
     &   F7*(F14 - 2*F25*(Pair1 + Pair4)) + 
     &    Opt4(HelAll(Gen(2)),Neu(3),Neu(4))

        Sub33(HelAll(Gen(2)),Neu(3),Neu(4)) = 
     &   F20*F24*Mf(4,Gen(2)) - F3*(Sub32 + F4*Mf(4,Gen(2))) - 
     &    F15*F22*MNeu(Neu(4)) + F2*F3*MNeu(Neu(4)) + 
     &    Sub10001(HelAll(Neu(3)))

        Sub34(HelAll(Gen(2)),Neu(3),Neu(4)) = 
     &   F23*(F30 + F31) + Sub10145(HelAll(Neu(3)),Neu(4)) + 
     &    Sub2082(HelAll(Gen(2)))

        Sub35(HelAll(Gen(2)),Neu(3),Neu(4)) = 
     &   Sub17(Neu(3),Neu(4))*Sub33(HelAll(Gen(2)),Neu(3),Neu(4)) - 
     &    Sub18(Neu(3),Neu(4))*Sub34(HelAll(Gen(2)),Neu(3),Neu(4))

        Sub38(HelAll(Gen(2)),Neu(3),Neu(4)) = 
     &   -(F12*F19*MNeu(Neu(4))) - F1*(Sub37 - F4*MNeu(Neu(4))) + 
     &    Sub10600(HelAll(Neu(3))) + Sub2090(HelAll(Gen(2)))

        Sub39(HelAll(Gen(2)),Neu(3),Neu(4)) = 
     &   Sub17(Neu(3),Neu(4))*Sub36(HelAll(Gen(2)),Neu(3),Neu(4)) - 
     &    Sub18(Neu(3),Neu(4))*Sub38(HelAll(Gen(2)),Neu(3),Neu(4))

        Sub211(HelAll(Gen(2)),Neu(3),Neu(4)) = 
     &   1/SW2*(2*CW2*Sub35(HelAll(Gen(2)),Neu(3),Neu(4)) - 
     &      2*SW2*Sub39(HelAll(Gen(2)),Neu(3),Neu(4)) + 
     &      Sub35(HelAll(Gen(2)),Neu(3),Neu(4)))


        LOOP(Sfe6, 1,2,1)

        Sub12(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   F34*Sub10(Gen(2),Neu(3),Sfe6) + F25*Sub11(Gen(2),Neu(3),Sfe6)

        Sub42(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   F6*Sub10(Gen(2),Neu(3),Sfe6) + F8*Sub11(Gen(2),Neu(3),Sfe6)

        Sub43(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   (F17 - F43 - F8*MNeu(Neu(3)))*Sub10(Gen(2),Neu(3),Sfe6) + 
     &    (F14 - F44 - F6*MNeu(Neu(3)))*Sub11(Gen(2),Neu(3),Sfe6)

        Sub44(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   Mf(4,Gen(2))*Sub42(HelAll(Gen(2)),Neu(3),Sfe6) - 
     &    Sub43(HelAll(Gen(2)),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub8(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   F41*Sub6(Gen(2),Neu(4),Sfe6) + F42*Sub7(Gen(2),Neu(4),Sfe6)

        Sub50(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   F35*Sub6(Gen(2),Neu(4),Sfe6) + F33*Sub7(Gen(2),Neu(4),Sfe6)

        Sub51(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   (F38 - F39 + F33*MNeu(Neu(4)))*Sub6(Gen(2),Neu(4),Sfe6) - 
     &    (F37 - F40 - F35*MNeu(Neu(4)))*Sub7(Gen(2),Neu(4),Sfe6)

        Sub52(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   Mf(4,Gen(2))*Sub50(HelAll(Gen(2)),Neu(4),Sfe6) + 
     &    Sub51(HelAll(Gen(2)),Neu(4),Sfe6)

        ENDLOOP(Sfe6)


        Sub41(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4)) = 
     &   -Sub211(HelAll(Gen(2)),Neu(3),Neu(4)) + 
     &    Mf(4,Gen(1))*Sub40(HelAll(Neu(3)),Neu(4))


        LOOP(Sfe6, 1,2,1)

        Sub28153(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   (2*Abb1*Sub12(HelAll(Gen(2)),Neu(3),Sfe6))/
     &     (U - MSf2(Sfe6,4,Gen(2))) - 
     &    Sub44(HelAll(Gen(2)),Neu(3),Sfe6)/
     &     (Mf2(4,Gen(2)) + Sub287(Gen(1),Gen(2),Neu(3),Neu(4)))

        Sub28154(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   (2*Abb2*Sub4(HelAll(Gen(1)),Neu(3),Sfe6))/
     &     (T - MSf2(Sfe6,4,Gen(1))) - 
     &    Sub49(HelAll(Gen(1)),Neu(3),Sfe6)/
     &     (Mf2(4,Gen(1)) + Sub240(Gen(1),Gen(2),Neu(3),Neu(4)))

        ENDLOOP(Sfe6)

#include "virt_contains.h"

        end

