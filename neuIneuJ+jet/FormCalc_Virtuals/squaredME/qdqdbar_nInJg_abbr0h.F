#if 0
* qdqdbar_nInJg_abbr0h.F
* abbreviations for {F[4, {Gen(1), Col1}], -F[4, {Gen(2), Col2}]} -> {F[11, {Neu(3)}], F[11, {Neu(4)}], V[5, {Glu5}]}
* generated by FormCalc 9.4 (7 Jun 2016) on 6-Mar-2017 20:30
#endif

#include "qdqdbar_nInJg_vars.h"
#include "virt_inline.h"
#include "virt_contains.h"


        subroutine qdqdbar_nInJg_abbr0h
        implicit none

#include "qdqdbar_nInJg_vars.h"
#include "virt_inline.h"

        F1 = -ChainV0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

        F2 = ChainV0(Spinor(4,1,2),0,0,Spinor(1,1,1))

        F3 = -ChainB1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

        F4 = ChainB0(Spinor(4,1,2),0,0,Spinor(1,1,1))

        F5 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

        F6 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

        F7 = ChainB0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

        F8 = ChainV1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

        F9 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

        F10 = -ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

        F11 = ChainV1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

        F12 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

        F13 = -ChainB1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

        F14 = ChainV2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

        F15 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

        F16 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

        F17 = ChainB0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

        F18 = -ChainV0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

        F19 = -ChainB1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

        F20 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

        F21 = -ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

        F22 = ChainV0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

        F23 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

        F24 = -ChainB0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

        F25 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

        F26 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F27 = ChainV1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

        F28 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

        F29 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F30 = ChainV1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

        F31 = ChainB0(Spinor(3,1,2),0,0,Spinor(1,1,1))

        F32 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

        F33 = -ChainB1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

        F34 = ChainV0(Spinor(3,1,2),0,0,Spinor(1,1,1))

        F35 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

        F36 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

        F37 = ChainV0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

        F38 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

        F39 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

        F40 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

        F41 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

        F42 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

        F43 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

        F44 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

        F45 = ChainV1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

        F46 = ChainB1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

        F47 = ChainV2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F48 = ChainV2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

        F49 = ChainB2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F50 = ChainB2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

        F51 = ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

        F52 = ChainB2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

        F53 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

        F54 = ChainV2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F55 = ChainV2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

        F56 = ChainB2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        Pair1 = Pair(ec(5),k(1))

        Pair2 = Pair(ec(5),k(4))

        Pair3 = Pair(ec(5),k(3))

        Pair4 = Pair(ec(5),k(2))

        Abb1 = Pair1 - Pair2

        Abb2 = Pair1 - Pair3

        Sub22(HelAll(Neu(3))) = F13*F15 - F4*(F16 - F5*MNeu(Neu(3)))

        Sub24(HelAll(Neu(3))) = F10*F11 - F2*(F12 - F6*MNeu(Neu(3)))

        Sub6014(HelAll(Neu(3))) = 
     &   F20*(F27 + F30) + F15*(F26 + F18*MNeu(Neu(3)))

        Sub13705(HelAll(Neu(3))) = 2*Abb2*F34 - F48 + F46*MNeu(Neu(3))

        Sub13710(HelAll(Neu(3))) = 2*Abb2*F31 - F50 + F45*MNeu(Neu(3))

        Sub43(HelAll(Neu(3))) = F47 + Sub13705(HelAll(Neu(3)))

        Sub44(HelAll(Neu(3))) = F49 + Sub13710(HelAll(Neu(3)))

        Sub21(HelAll(Neu(4))) = F11*F15 - F7*(F14 + F8*MNeu(Neu(4)))

        Sub25(HelAll(Neu(4))) = F10*F13 - F1*(F9 + F3*MNeu(Neu(4)))

        Sub13556(HelAll(Neu(4))) = 2*Abb1*F2 - F55 + F51*MNeu(Neu(4))

        Sub13561(HelAll(Neu(4))) = 2*Abb1*F4 - F52 + F53*MNeu(Neu(4))

        Sub51(HelAll(Neu(4))) = F54 + Sub13556(HelAll(Neu(4)))

        Sub52(HelAll(Neu(4))) = F56 + Sub13561(HelAll(Neu(4)))


        Sub19(HelAll(Neu(3)),Neu(4)) = 
     &   F3*F7*Sub17(Neu(3),Neu(4)) - F4*F6*Sub18(Neu(3),Neu(4))

        Sub20(HelAll(Neu(3)),Neu(4)) = 
     &   F2*F5*Sub17(Neu(3),Neu(4)) - F1*F8*Sub18(Neu(3),Neu(4))

        Sub23(HelAll(Neu(3)),Neu(4)) = 
     &   Sub17(Neu(3),Neu(4))*Sub21(HelAll(Neu(4))) - 
     &    Sub18(Neu(3),Neu(4))*Sub22(HelAll(Neu(3)))

        Sub26(HelAll(Neu(3)),Neu(4)) = 
     &   Sub17(Neu(3),Neu(4))*Sub24(HelAll(Neu(3))) - 
     &    Sub18(Neu(3),Neu(4))*Sub25(HelAll(Neu(4)))

        Sub27(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(2*CW2*Sub19(HelAll(Neu(3)),Neu(4)) - 
     &      2*SW2*Sub20(HelAll(Neu(3)),Neu(4)) + 
     &      Sub19(HelAll(Neu(3)),Neu(4)))

        Sub29(HelAll(Neu(3)),Neu(4)) = 
     &   (F20*F23 - F3*F7)*Sub17(Neu(3),Neu(4)) + 
     &    (-(F21*F23) + F4*F6)*Sub18(Neu(3),Neu(4))

        Sub30(HelAll(Neu(3)),Neu(4)) = 
     &   (F20*F37 - F2*F5)*Sub17(Neu(3),Neu(4)) + 
     &    (-(F21*F37) + F1*F8)*Sub18(Neu(3),Neu(4))

        Sub34(HelAll(Neu(3)),Neu(4)) = 
     &   F20*(F19 + F33) + F2*(F12 - 2*F28*(Pair1 + Pair4)) + 
     &    (F10*F18 - F2*F6)*MNeu(Neu(3)) + F10*(F26 - F17*MNeu(Neu(4)))

        Sub37(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(2*SW2*Sub29(HelAll(Neu(3)),Neu(4)) + 
     &      (-1 - 2*CW2)*Sub30(HelAll(Neu(3)),Neu(4)))

        Sub127(HelAll(Neu(3)),Neu(4)) = 
     &   F1*F3*MNeu(Neu(4)) + F10*(F17*MNeu(Neu(3)) - F18*MNeu(Neu(4)))

        Sub128(HelAll(Neu(3)),Neu(4)) = 
     &   F1*(F9 - 2*F24*(Pair1 + Pair4)) + 
     &    Sub127(HelAll(Neu(3)),Neu(4))

        Sub137(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(2*CW2*Sub23(HelAll(Neu(3)),Neu(4)) - 
     &      2*SW2*Sub26(HelAll(Neu(3)),Neu(4)) + 
     &      Sub23(HelAll(Neu(3)),Neu(4)))

        Sub2024(HelAll(Neu(3)),Neu(4)) = 
     &   -(F4*F5*MNeu(Neu(3))) + 
     &    F15*(F17*MNeu(Neu(3)) - F18*MNeu(Neu(4)))

        Sub31(HelAll(Neu(3)),Neu(4)) = 
     &   F7*(F14 - 2*F22*(Pair1 + Pair4)) - 
     &    (F15*F17 - F7*F8)*MNeu(Neu(4)) + Sub6014(HelAll(Neu(3)))

        Sub35(HelAll(Neu(3)),Neu(4)) = 
     &   F10*F29 + F21*(F19 + F33) + Sub128(HelAll(Neu(3)),Neu(4))

        Sub36(HelAll(Neu(3)),Neu(4)) = 
     &   Sub17(Neu(3),Neu(4))*Sub34(HelAll(Neu(3)),Neu(4)) - 
     &    Sub18(Neu(3),Neu(4))*Sub35(HelAll(Neu(3)),Neu(4))

        Sub117(HelAll(Neu(3)),Neu(4)) = 
     &   F4*(F16 - 2*F25*(Pair1 + Pair4)) + 
     &    Sub2024(HelAll(Neu(3)),Neu(4))

        Sub32(HelAll(Neu(3)),Neu(4)) = 
     &   F15*F29 + F21*(F27 + F30) + Sub117(HelAll(Neu(3)),Neu(4))

        Sub33(HelAll(Neu(3)),Neu(4)) = 
     &   Sub17(Neu(3),Neu(4))*Sub31(HelAll(Neu(3)),Neu(4)) - 
     &    Sub18(Neu(3),Neu(4))*Sub32(HelAll(Neu(3)),Neu(4))



        Sub28(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   Sub137(HelAll(Neu(3)),Neu(4)) + 
     &    Mf(4,Gen(1))*Sub27(HelAll(Neu(3)),Neu(4))

        Sub38(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   1/SW2*(2*CW2*Sub33(HelAll(Neu(3)),Neu(4)) - 
     &      SW2*(2*Sub36(HelAll(Neu(3)),Neu(4)) - 
     &         Mf(4,Gen(1))*Sub37(HelAll(Neu(3)),Neu(4))) + 
     &      Sub33(HelAll(Neu(3)),Neu(4)))


        LOOP(Sfe6, 1,2,1)

        Sub4(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F34*Sub1(Gen(1),Neu(3),Sfe6) + F31*Sub3(Gen(1),Neu(3),Sfe6)

        Sub42(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F45*Sub1(Gen(1),Neu(3),Sfe6) + F46*Sub3(Gen(1),Neu(3),Sfe6)

        Sub45(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   Sub1(Gen(1),Neu(3),Sfe6)*Sub43(HelAll(Neu(3))) + 
     &    Sub3(Gen(1),Neu(3),Sfe6)*Sub44(HelAll(Neu(3)))

        Sub46(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   Mf(4,Gen(1))*Sub42(HelAll(Gen(1)),Neu(3),Sfe6) + 
     &    Sub45(HelAll(Gen(1)),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub16(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   F2*Sub13(Gen(1),Neu(4),Sfe6) + F4*Sub15(Gen(1),Neu(4),Sfe6)

        Sub50(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   F53*Sub13(Gen(1),Neu(4),Sfe6) + F51*Sub15(Gen(1),Neu(4),Sfe6)

        Sub53(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   Sub13(Gen(1),Neu(4),Sfe6)*Sub51(HelAll(Neu(4))) + 
     &    Sub15(Gen(1),Neu(4),Sfe6)*Sub52(HelAll(Neu(4)))

        Sub54(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   Mf(4,Gen(1))*Sub50(HelAll(Gen(1)),Neu(4),Sfe6) + 
     &    Sub53(HelAll(Gen(1)),Neu(4),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub12(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   F25*Sub10(Gen(2),Neu(3),Sfe6) + F28*Sub11(Gen(2),Neu(3),Sfe6)

        Sub39(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   F6*Sub10(Gen(2),Neu(3),Sfe6) + F5*Sub11(Gen(2),Neu(3),Sfe6)

        Sub40(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   (F16 - F41 - F5*MNeu(Neu(3)))*Sub10(Gen(2),Neu(3),Sfe6) + 
     &    (F12 - F43 - F6*MNeu(Neu(3)))*Sub11(Gen(2),Neu(3),Sfe6)

        Sub41(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   Mf(4,Gen(2))*Sub39(HelAll(Gen(2)),Neu(3),Sfe6) - 
     &    Sub40(HelAll(Gen(2)),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub8(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   F42*Sub6(Gen(2),Neu(4),Sfe6) + F44*Sub7(Gen(2),Neu(4),Sfe6)

        Sub47(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   F32*Sub6(Gen(2),Neu(4),Sfe6) + F40*Sub7(Gen(2),Neu(4),Sfe6)

        Sub48(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   (F35 - F36 + F40*MNeu(Neu(4)))*Sub6(Gen(2),Neu(4),Sfe6) + 
     &    (F38 - F39 + F32*MNeu(Neu(4)))*Sub7(Gen(2),Neu(4),Sfe6)

        Sub49(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   Mf(4,Gen(2))*Sub47(HelAll(Gen(2)),Neu(4),Sfe6) + 
     &    Sub48(HelAll(Gen(2)),Neu(4),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub17384(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   (2*Abb1*Sub12(HelAll(Gen(2)),Neu(3),Sfe6))/
     &     (U - Sub17383(Gen(2),Sfe6)) - 
     &    Sub41(HelAll(Gen(2)),Neu(3),Sfe6)/
     &     (Mf2(4,Gen(2)) + Sub17382(Gen(1),Gen(2),Neu(3),Neu(4)))

        Sub17385(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   -(Sub46(HelAll(Gen(1)),Neu(3),Sfe6)/
     &       (Mf2(4,Gen(1)) + Sub1554(Gen(1),Gen(2),Neu(3),Neu(4)))) + 
     &    (2*Abb2*Sub4(HelAll(Gen(1)),Neu(3),Sfe6))/
     &     (T - Sub517(Gen(1),Sfe6))

        ENDLOOP(Sfe6)

#include "virt_contains.h"

        end

