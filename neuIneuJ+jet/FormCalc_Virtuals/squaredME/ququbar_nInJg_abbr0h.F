#if 0
* ququbar_nInJg_abbr0h.F
* abbreviations for {F[3, {Gen(1), Col1}], -F[3, {Gen(2), Col2}]} -> {F[11, {Neu(3)}], F[11, {Neu(4)}], V[5, {Glu5}]}
* generated by FormCalc 9.4 (7 Jun 2016) on 1-Mar-2017 13:52
#endif

#include "ququbar_nInJg_vars.h"
#include "virt_inline.h"
#include "virt_contains.h"


        subroutine ququbar_nInJg_abbr0h
        implicit none

#include "ququbar_nInJg_vars.h"
#include "virt_inline.h"

        F1 = -ChainV0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

        F2 = -ChainB1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

        F3 = ChainV0(Spinor(4,1,2),0,0,Spinor(1,1,1))

        F4 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

        F5 = ChainB0(Spinor(4,1,2),0,0,Spinor(1,1,1))

        F6 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

        F7 = ChainB0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

        F8 = ChainV1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

        F9 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

        F10 = -ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

        F11 = ChainV1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

        F12 = -ChainB1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

        F13 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

        F14 = ChainV2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

        F15 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

        F16 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

        F17 = -ChainV0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

        F18 = ChainB0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

        F19 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

        F20 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F21 = -ChainB1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

        F22 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

        F23 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F24 = -ChainB0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

        F25 = -ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

        F26 = -ChainB1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

        F27 = ChainV1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

        F28 = ChainV0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

        F29 = ChainV1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

        F30 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

        F31 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

        F32 = ChainV0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

        F33 = ChainB0(Spinor(3,1,2),0,0,Spinor(1,1,1))

        F34 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

        F35 = ChainV0(Spinor(3,1,2),0,0,Spinor(1,1,1))

        F36 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

        F37 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

        F38 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

        F39 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

        F40 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

        F41 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

        F42 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

        F43 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

        F44 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

        F45 = ChainV2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F46 = ChainB1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

        F47 = ChainV2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

        F48 = ChainV1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

        F49 = ChainB2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F50 = ChainB2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

        F51 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

        F52 = ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

        F53 = ChainB2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

        F54 = ChainV2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F55 = ChainV2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

        F56 = ChainB2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        Pair1 = Pair(ec(5),k(1))

        Pair2 = Pair(ec(5),k(4))

        Pair3 = Pair(ec(5),k(3))

        Pair4 = Pair(ec(5),k(2))

        Sub2112 = F15*F23 + F25*(F27 + F29) + 
     &    F5*(F16 - 2*F31*(Pair1 + Pair4))

        Sub2123 = F10*F23 + F25*(F21 + F26) + 
     &    F1*(F9 - 2*F24*(Pair1 + Pair4))

        Abb1 = Pair1 - Pair2

        Abb2 = Pair1 - Pair3

        Sub15(HelAll(Neu(3))) = F12*F15 - F5*(F16 - F6*MNeu(Neu(3)))

        Sub17(HelAll(Neu(3))) = F10*F11 - F3*(F13 - F4*MNeu(Neu(3)))

        Sub6859(HelAll(Neu(3))) = 
     &   F22*(F27 + F29) + F15*(F20 + F17*MNeu(Neu(3)))

        Sub16463(HelAll(Neu(3))) = 2*Abb2*F35 - F47 + F46*MNeu(Neu(3))

        Sub16468(HelAll(Neu(3))) = 2*Abb2*F33 - F50 + F48*MNeu(Neu(3))

        Sub51(HelAll(Neu(3))) = F45 + Sub16463(HelAll(Neu(3)))

        Sub52(HelAll(Neu(3))) = F49 + Sub16468(HelAll(Neu(3)))

        Sub14(HelAll(Neu(4))) = F11*F15 - F7*(F14 + F8*MNeu(Neu(4)))

        Sub18(HelAll(Neu(4))) = F10*F12 - F1*(F9 + F2*MNeu(Neu(4)))

        Sub16402(HelAll(Neu(4))) = 2*Abb1*F3 - F55 + F52*MNeu(Neu(4))

        Sub16407(HelAll(Neu(4))) = 2*Abb1*F5 - F53 + F51*MNeu(Neu(4))

        Sub57(HelAll(Neu(4))) = F54 + Sub16402(HelAll(Neu(4)))

        Sub58(HelAll(Neu(4))) = F56 + Sub16407(HelAll(Neu(4)))


        Sub12(HelAll(Neu(3)),Neu(4)) = 
     &   F2*F7*Sub10(Neu(3),Neu(4)) - F4*F5*Sub11(Neu(3),Neu(4))

        Sub13(HelAll(Neu(3)),Neu(4)) = 
     &   F3*F6*Sub10(Neu(3),Neu(4)) - F1*F8*Sub11(Neu(3),Neu(4))

        Sub16(HelAll(Neu(3)),Neu(4)) = 
     &   Sub10(Neu(3),Neu(4))*Sub14(HelAll(Neu(4))) - 
     &    Sub11(Neu(3),Neu(4))*Sub15(HelAll(Neu(3)))

        Sub19(HelAll(Neu(3)),Neu(4)) = 
     &   Sub10(Neu(3),Neu(4))*Sub17(HelAll(Neu(3))) - 
     &    Sub11(Neu(3),Neu(4))*Sub18(HelAll(Neu(4)))

        Sub20(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(-(4*CW2*Sub12(HelAll(Neu(3)),Neu(4))) + 
     &      4*SW2*Sub13(HelAll(Neu(3)),Neu(4)) + 
     &      Sub12(HelAll(Neu(3)),Neu(4)))

        Sub22(HelAll(Neu(3)),Neu(4)) = 
     &   (F22*F30 - F2*F7)*Sub10(Neu(3),Neu(4)) + 
     &    (-(F25*F30) + F4*F5)*Sub11(Neu(3),Neu(4))

        Sub23(HelAll(Neu(3)),Neu(4)) = 
     &   (F22*F32 - F3*F6)*Sub10(Neu(3),Neu(4)) + 
     &    (-(F25*F32) + F1*F8)*Sub11(Neu(3),Neu(4))

        Sub27(HelAll(Neu(3)),Neu(4)) = 
     &   F22*(F21 + F26) + F3*(F13 - 2*F19*(Pair1 + Pair4)) + 
     &    (F10*F17 - F3*F4)*MNeu(Neu(3)) + F10*(F20 - F18*MNeu(Neu(4)))

        Sub30(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(4*SW2*Sub22(HelAll(Neu(3)),Neu(4)) - 
     &      4*CW2*Sub23(HelAll(Neu(3)),Neu(4)) + 
     &      Sub23(HelAll(Neu(3)),Neu(4)))

        Sub146(HelAll(Neu(3)),Neu(4)) = 
     &   F1*F2*MNeu(Neu(4)) + F10*(F18*MNeu(Neu(3)) - F17*MNeu(Neu(4)))

        Sub164(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(-(4*CW2*Sub16(HelAll(Neu(3)),Neu(4))) + 
     &      4*SW2*Sub19(HelAll(Neu(3)),Neu(4)) + 
     &      Sub16(HelAll(Neu(3)),Neu(4)))

        Sub2115(HelAll(Neu(3)),Neu(4)) = 
     &   -(F5*F6*MNeu(Neu(3))) + 
     &    F15*(F18*MNeu(Neu(3)) - F17*MNeu(Neu(4)))

        Sub24(HelAll(Neu(3)),Neu(4)) = 
     &   F7*(F14 - 2*F28*(Pair1 + Pair4)) - 
     &    (F15*F18 - F7*F8)*MNeu(Neu(4)) + Sub6859(HelAll(Neu(3)))

        Sub25(HelAll(Neu(3)),Neu(4)) = 
     &   Sub2112 + Sub2115(HelAll(Neu(3)),Neu(4))

        Sub26(HelAll(Neu(3)),Neu(4)) = 
     &   Sub10(Neu(3),Neu(4))*Sub24(HelAll(Neu(3)),Neu(4)) - 
     &    Sub11(Neu(3),Neu(4))*Sub25(HelAll(Neu(3)),Neu(4))

        Sub28(HelAll(Neu(3)),Neu(4)) = Sub2123 + Sub146(HelAll(Neu(3)),Neu(4))

        Sub29(HelAll(Neu(3)),Neu(4)) = 
     &   Sub10(Neu(3),Neu(4))*Sub27(HelAll(Neu(3)),Neu(4)) - 
     &    Sub11(Neu(3),Neu(4))*Sub28(HelAll(Neu(3)),Neu(4))

        Sub162(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(-(4*CW2*Sub26(HelAll(Neu(3)),Neu(4))) + 
     &      4*SW2*Sub29(HelAll(Neu(3)),Neu(4)) + 
     &      Sub26(HelAll(Neu(3)),Neu(4)))



        Sub21(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   Sub164(HelAll(Neu(3)),Neu(4)) + 
     &    Mf(3,Gen(1))*Sub20(HelAll(Neu(3)),Neu(4))

        Sub31(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   -Sub162(HelAll(Neu(3)),Neu(4)) + 
     &    Mf(3,Gen(1))*Sub30(HelAll(Neu(3)),Neu(4))


        LOOP(Sfe6, 1,2,1)

        Sub6(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F35*Sub3(Gen(1),Neu(3),Sfe6) - F33*Sub5(Gen(1),Neu(3),Sfe6)

        Sub48(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F48*Sub3(Gen(1),Neu(3),Sfe6) - F46*Sub5(Gen(1),Neu(3),Sfe6)

        Sub53(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   Sub3(Gen(1),Neu(3),Sfe6)*Sub51(HelAll(Neu(3))) - 
     &    Sub5(Gen(1),Neu(3),Sfe6)*Sub52(HelAll(Neu(3)))

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub45(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   F3*Sub32(Gen(1),Neu(4),Sfe6) - F5*Sub39(Gen(1),Neu(4),Sfe6)

        Sub59(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   Sub32(Gen(1),Neu(4),Sfe6)*Sub57(HelAll(Neu(4))) - 
     &    Sub39(Gen(1),Neu(4),Sfe6)*Sub58(HelAll(Neu(4)))

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub36(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   F31*Sub34(Gen(2),Neu(3),Sfe6) - F19*Sub35(Gen(2),Neu(3),Sfe6)

        Sub44(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   F4*Sub34(Gen(2),Neu(3),Sfe6) - F6*Sub35(Gen(2),Neu(3),Sfe6)

        Sub46(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   (F16 - F41 - F6*MNeu(Neu(3)))*Sub34(Gen(2),Neu(3),Sfe6) - 
     &    (F13 - F43 - F4*MNeu(Neu(3)))*Sub35(Gen(2),Neu(3),Sfe6)

        Sub47(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   Mf(3,Gen(2))*Sub44(HelAll(Gen(2)),Neu(3),Sfe6) - 
     &    Sub46(HelAll(Gen(2)),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub54(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   F42*Sub2(Gen(2),Neu(4),Sfe6) - F44*Sub8(Gen(2),Neu(4),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub9(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub6(HelAll(Gen(1)),Neu(3),Sfe6)*
     &    (F42*Sub2(Gen(2),Neu(4),Sfe6) - F44*Sub8(Gen(2),Neu(4),Sfe6))

        Sub40(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub36(HelAll(Gen(2)),Neu(3),Sfe6)*
     &    (F3*Sub32(Gen(1),Neu(4),Sfe6) - F5*Sub39(Gen(1),Neu(4),Sfe6))

        Sub41(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub6(HelAll(Gen(1)),Neu(3),Sfe6)*
     &    (F34*Sub2(Gen(2),Neu(4),Sfe6) - F37*Sub8(Gen(2),Neu(4),Sfe6))

        Sub42(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub6(HelAll(Gen(1)),Neu(3),Sfe6)*
     &    ((F36 - F38 + F37*MNeu(Neu(4)))*Sub2(Gen(2),Neu(4),Sfe6) - 
     &      (F39 - F40 + F34*MNeu(Neu(4)))*Sub8(Gen(2),Neu(4),Sfe6))

        Sub43(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Mf(3,Gen(2))*Sub41(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) + 
     &    Sub42(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6)

        Sub50(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub48(HelAll(Gen(1)),Neu(3),Sfe6)*
     &    (F42*Sub2(Gen(2),Neu(4),Sfe6) - F44*Sub8(Gen(2),Neu(4),Sfe6))

        Sub56(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub36(HelAll(Gen(2)),Neu(3),Sfe6)*
     &    (F51*Sub32(Gen(1),Neu(4),Sfe6) - F52*Sub39(Gen(1),Neu(4),Sfe6))

        Sub18435(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub43(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6)/
     &     (T - Sub605(Gen(1),Sfe6)) - 
     &    (Sub45(HelAll(Gen(1)),Neu(4),Sfe6)*
     &       Sub47(HelAll(Gen(2)),Neu(3),Sfe6))/
     &     (T14 - Sub605(Gen(1),Sfe6))

        Sub55(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Mf(3,Gen(1))*Sub50(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) + 
     &    Sub53(HelAll(Gen(1)),Neu(3),Sfe6)*
     &     Sub54(HelAll(Gen(2)),Neu(4),Sfe6)

        Sub60(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Mf(3,Gen(1))*Sub56(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) + 
     &    Sub36(HelAll(Gen(2)),Neu(3),Sfe6)*
     &     Sub59(HelAll(Gen(1)),Neu(4),Sfe6)

        Sub18436(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub55(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6)/
     &     (T24 - Sub18434(Gen(2),Sfe6)) - 
     &    Sub60(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6)/
     &     (U - Sub18434(Gen(2),Sfe6))

        ENDLOOP(Sfe6)

#include "virt_contains.h"

        end

