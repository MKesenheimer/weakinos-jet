#if 0
* ququbar_nInJg_abbr0h.F
* abbreviations for {F[3, {Gen(1), Col1}], -F[3, {Gen(2), Col2}]} -> {F[11, {Neu(3)}], F[11, {Neu(4)}], V[5, {Glu5}]}
* generated by FormCalc 9.4 (7 Jun 2016) on 2-Mar-2017 7:47
#endif

#include "ququbar_nInJg_vars.h"
#include "virt_inline.h"
#include "virt_contains.h"


        subroutine ququbar_nInJg_abbr0h
        implicit none

#include "ququbar_nInJg_vars.h"
#include "virt_inline.h"

        F1 = ChainV0(Spinor(4,1,2),0,0,Spinor(1,1,1))

        F2 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

        F3 = -ChainV0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

        F4 = -ChainB1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

        F5 = ChainB0(Spinor(4,1,2),0,0,Spinor(1,1,1))

        F6 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

        F7 = ChainB0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

        F8 = ChainV1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

        F9 = -ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

        F10 = ChainV1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

        F11 = -ChainB1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

        F12 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

        F13 = ChainV2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

        F14 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

        F15 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

        F16 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

        F17 = ChainB0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

        F18 = -ChainV0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

        F19 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

        F20 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F21 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F22 = -ChainB1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

        F23 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

        F24 = -ChainB0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

        F25 = -ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

        F26 = -ChainB1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

        F27 = ChainV0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

        F28 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

        F29 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

        F30 = ChainV1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

        F31 = ChainV1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

        F32 = ChainV0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

        F33 = ChainB0(Spinor(3,1,2),0,0,Spinor(1,1,1))

        F34 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

        F35 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

        F36 = ChainV0(Spinor(3,1,2),0,0,Spinor(1,1,1))

        F37 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

        F38 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

        F39 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

        F40 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

        F41 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

        F42 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

        F43 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

        F44 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

        F45 = ChainV2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F46 = ChainV2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

        F47 = ChainB2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F48 = ChainB2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

        F49 = ChainV1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

        F50 = ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

        F51 = ChainV2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F52 = ChainV2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

        F53 = ChainB2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F54 = ChainB1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

        F55 = ChainB2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

        F56 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

        Pair1 = Pair(ec(5),k(1))

        Pair2 = Pair(ec(5),k(4))

        Pair3 = Pair(ec(5),k(3))

        Pair4 = Pair(ec(5),k(2))

        Sub2117 = F14*F21 + F25*(F30 + F31) + 
     &    F5*(F15 - 2*F28*(Pair1 + Pair4))

        Sub2128 = F25*(F22 + F26) + F16*F3 + F21*F9

        Abb1 = Pair1 - Pair2

        Abb2 = Pair1 - Pair3

        Sub2127 = -2*F24*F3*(Pair1 + Pair4) + Sub2128

        Sub24(HelAll(Neu(3))) = F11*F14 - F5*(F15 - F6*MNeu(Neu(3)))

        Sub26(HelAll(Neu(3))) = F10*F9 - F1*(F12 - F2*MNeu(Neu(3)))

        Sub50(HelAll(Neu(3))) = 2*Abb2*F36 + F45 - F46 + F54*MNeu(Neu(3))

        Sub51(HelAll(Neu(3))) = 2*Abb2*F33 + F47 - F48 + F49*MNeu(Neu(3))

        Sub23(HelAll(Neu(4))) = F10*F14 - F7*(F13 + F8*MNeu(Neu(4)))

        Sub27(HelAll(Neu(4))) = F11*F9 - F3*(F16 + F4*MNeu(Neu(4)))

        Sub55(HelAll(Neu(4))) = 2*Abb1*F1 + F51 - F52 + F50*MNeu(Neu(4))

        Sub56(HelAll(Neu(4))) = 2*Abb1*F5 + F53 - F55 + F56*MNeu(Neu(4))


        Sub21(HelAll(Neu(3)),Neu(4)) = 
     &   F4*F7*Sub19(Neu(3),Neu(4)) - F2*F5*Sub20(Neu(3),Neu(4))

        Sub22(HelAll(Neu(3)),Neu(4)) = 
     &   F1*F6*Sub19(Neu(3),Neu(4)) - F3*F8*Sub20(Neu(3),Neu(4))

        Sub25(HelAll(Neu(3)),Neu(4)) = 
     &   Sub19(Neu(3),Neu(4))*Sub23(HelAll(Neu(4))) - 
     &    Sub20(Neu(3),Neu(4))*Sub24(HelAll(Neu(3)))

        Sub28(HelAll(Neu(3)),Neu(4)) = 
     &   Sub19(Neu(3),Neu(4))*Sub26(HelAll(Neu(3))) - 
     &    Sub20(Neu(3),Neu(4))*Sub27(HelAll(Neu(4)))

        Sub29(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(-(4*CW2*Sub21(HelAll(Neu(3)),Neu(4))) + 
     &      4*SW2*Sub22(HelAll(Neu(3)),Neu(4)) + 
     &      Sub21(HelAll(Neu(3)),Neu(4)))

        Sub35(HelAll(Neu(3)),Neu(4)) = 
     &   (F23*F29 - F4*F7)*Sub19(Neu(3),Neu(4)) + 
     &    (-(F25*F29) + F2*F5)*Sub20(Neu(3),Neu(4))

        Sub36(HelAll(Neu(3)),Neu(4)) = 
     &   (F23*F32 - F1*F6)*Sub19(Neu(3),Neu(4)) + 
     &    (-(F25*F32) + F3*F8)*Sub20(Neu(3),Neu(4))

        Sub37(HelAll(Neu(3)),Neu(4)) = 
     &   F23*(F30 + F31) + F7*(F13 - 2*F27*(Pair1 + Pair4)) + 
     &    F14*(F20 + F18*MNeu(Neu(3))) - (F14*F17 - F7*F8)*MNeu(Neu(4))

        Sub40(HelAll(Neu(3)),Neu(4)) = 
     &   F23*(F22 + F26) + F1*(F12 - 2*F19*(Pair1 + Pair4)) - 
     &    (F1*F2 - F18*F9)*MNeu(Neu(3)) + F9*(F20 - F17*MNeu(Neu(4)))

        Sub43(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(4*SW2*Sub35(HelAll(Neu(3)),Neu(4)) - 
     &      4*CW2*Sub36(HelAll(Neu(3)),Neu(4)) + 
     &      Sub36(HelAll(Neu(3)),Neu(4)))

        Sub120(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(-(4*CW2*Sub25(HelAll(Neu(3)),Neu(4))) + 
     &      4*SW2*Sub28(HelAll(Neu(3)),Neu(4)) + 
     &      Sub25(HelAll(Neu(3)),Neu(4)))

        Sub143(HelAll(Neu(3)),Neu(4)) = 
     &   F17*F9*MNeu(Neu(3)) + (F3*F4 - F18*F9)*MNeu(Neu(4))

        Sub2120(HelAll(Neu(3)),Neu(4)) = 
     &   -(F5*F6*MNeu(Neu(3))) + 
     &    F14*(F17*MNeu(Neu(3)) - F18*MNeu(Neu(4)))

        Sub38(HelAll(Neu(3)),Neu(4)) = 
     &   Sub2117 + Sub2120(HelAll(Neu(3)),Neu(4))

        Sub39(HelAll(Neu(3)),Neu(4)) = 
     &   Sub19(Neu(3),Neu(4))*Sub37(HelAll(Neu(3)),Neu(4)) - 
     &    Sub20(Neu(3),Neu(4))*Sub38(HelAll(Neu(3)),Neu(4))

        Sub41(HelAll(Neu(3)),Neu(4)) = Sub2127 + Sub143(HelAll(Neu(3)),Neu(4))

        Sub42(HelAll(Neu(3)),Neu(4)) = 
     &   Sub19(Neu(3),Neu(4))*Sub40(HelAll(Neu(3)),Neu(4)) - 
     &    Sub20(Neu(3),Neu(4))*Sub41(HelAll(Neu(3)),Neu(4))



        Sub30(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   Sub120(HelAll(Neu(3)),Neu(4)) + 
     &    Mf(3,Gen(1))*Sub29(HelAll(Neu(3)),Neu(4))

        Sub44(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   -(1/SW2*(-(4*CW2*Sub39(HelAll(Neu(3)),Neu(4))) + 
     &        SW2*(4*Sub42(HelAll(Neu(3)),Neu(4)) - 
     &           Mf(3,Gen(1))*Sub43(HelAll(Neu(3)),Neu(4))) + 
     &        Sub39(HelAll(Neu(3)),Neu(4))))


        LOOP(Sfe6, 1,2,1)

        Sub6(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F36*Sub3(Gen(1),Neu(3),Sfe6) - F33*Sub5(Gen(1),Neu(3),Sfe6)

        Sub48(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F49*Sub3(Gen(1),Neu(3),Sfe6) - F54*Sub5(Gen(1),Neu(3),Sfe6)

        Sub52(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   Sub3(Gen(1),Neu(3),Sfe6)*Sub50(HelAll(Neu(3))) - 
     &    Sub5(Gen(1),Neu(3),Sfe6)*Sub51(HelAll(Neu(3)))

        Sub53(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   Mf(3,Gen(1))*Sub48(HelAll(Gen(1)),Neu(3),Sfe6) + 
     &    Sub52(HelAll(Gen(1)),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub32(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   F1*Sub10(Gen(1),Neu(4),Sfe6) - F5*Sub17(Gen(1),Neu(4),Sfe6)

        Sub57(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   Sub10(Gen(1),Neu(4),Sfe6)*Sub55(HelAll(Neu(4))) - 
     &    Sub17(Gen(1),Neu(4),Sfe6)*Sub56(HelAll(Neu(4)))

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub14(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   F28*Sub12(Gen(2),Neu(3),Sfe6) - F19*Sub13(Gen(2),Neu(3),Sfe6)

        Sub31(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   F2*Sub12(Gen(2),Neu(3),Sfe6) - F6*Sub13(Gen(2),Neu(3),Sfe6)

        Sub33(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   (F15 - F43 - F6*MNeu(Neu(3)))*Sub12(Gen(2),Neu(3),Sfe6) - 
     &    (F12 - F44 - F2*MNeu(Neu(3)))*Sub13(Gen(2),Neu(3),Sfe6)

        Sub34(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   Mf(3,Gen(2))*Sub31(HelAll(Gen(2)),Neu(3),Sfe6) - 
     &    Sub33(HelAll(Gen(2)),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub45(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   (F34 - F42 - F37*MNeu(Neu(4)))*Sub2(Gen(2),Neu(4),Sfe6) + 
     &    (F35 - F38 + F39*MNeu(Neu(4)))*Sub8(Gen(2),Neu(4),Sfe6)

        Sub49(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   F40*Sub2(Gen(2),Neu(4),Sfe6) - F41*Sub8(Gen(2),Neu(4),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub9(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub6(HelAll(Gen(1)),Neu(3),Sfe6)*
     &    (F40*Sub2(Gen(2),Neu(4),Sfe6) - F41*Sub8(Gen(2),Neu(4),Sfe6))

        Sub18(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub14(HelAll(Gen(2)),Neu(3),Sfe6)*
     &    (F1*Sub10(Gen(1),Neu(4),Sfe6) - F5*Sub17(Gen(1),Neu(4),Sfe6))

        Sub46(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub6(HelAll(Gen(1)),Neu(3),Sfe6)*
     &    (F39*Sub2(Gen(2),Neu(4),Sfe6) - F37*Sub8(Gen(2),Neu(4),Sfe6))

        Sub47(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Mf(3,Gen(2))*Sub46(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) - 
     &    Sub45(HelAll(Gen(2)),Neu(4),Sfe6)*
     &     Sub6(HelAll(Gen(1)),Neu(3),Sfe6)

        Sub54(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Sub14(HelAll(Gen(2)),Neu(3),Sfe6)*
     &    (F56*Sub10(Gen(1),Neu(4),Sfe6) - F50*Sub17(Gen(1),Neu(4),Sfe6))

        Sub58(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Mf(3,Gen(1))*Sub54(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) + 
     &    Sub14(HelAll(Gen(2)),Neu(3),Sfe6)*
     &     Sub57(HelAll(Gen(1)),Neu(4),Sfe6)

        Sub3063(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   (2*Abb1*Sub18(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6))/
     &     (U - Sub3062(Gen(2),Sfe6)) - 
     &    (Sub32(HelAll(Gen(1)),Neu(4),Sfe6)*
     &       Sub34(HelAll(Gen(2)),Neu(3),Sfe6))/
     &     (Mf2(3,Gen(2)) + Sub3061(Gen(1),Gen(2),Neu(3),Neu(4)))

        Sub3064(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   -((Sub49(HelAll(Gen(2)),Neu(4),Sfe6)*
     &         Sub53(HelAll(Gen(1)),Neu(3),Sfe6))/
     &       ((Mf2(3,Gen(1)) + Sub1633(Gen(1),Gen(2),Neu(3),Neu(4)))*
     &         (T24 - Sub3062(Gen(2),Sfe6)))) - 
     &    Sub47(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6)/
     &     ((Mf2(3,Gen(2)) + Sub3061(Gen(1),Gen(2),Neu(3),Neu(4)))*
     &       (T - Sub611(Gen(1),Sfe6)))

        ENDLOOP(Sfe6)

#include "virt_contains.h"

        end

