#if 0
* ququbar_nInJg_abbr0h.F
* abbreviations for {F[3, {Gen(1), Col1}], -F[3, {Gen(2), Col2}]} -> {F[11, {Neu(3)}], F[11, {Neu(4)}], V[5, {Glu5}]}
* generated by FormCalc 9.4 (7 Jun 2016) on 6-Mar-2017 19:55
#endif

#include "ququbar_nInJg_vars.h"
#include "virt_inline.h"
#include "virt_contains.h"


        subroutine ququbar_nInJg_abbr0h
        implicit none

#include "ququbar_nInJg_vars.h"
#include "virt_inline.h"

        F1 = ChainV0(Spinor(4,1,2),0,0,Spinor(1,1,1))

        F2 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

        F3 = -ChainV0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

        F4 = -ChainB1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

        F5 = ChainB0(Spinor(4,1,2),0,0,Spinor(1,1,1))

        F6 = ChainB0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

        F7 = ChainV1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

        F8 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

        F9 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

        F10 = -ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

        F11 = ChainV1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

        F12 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

        F13 = -ChainB1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

        F14 = ChainV2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

        F15 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

        F16 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

        F17 = ChainB0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

        F18 = -ChainV0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

        F19 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

        F20 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F21 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

        F22 = -ChainB1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

        F23 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

        F24 = -ChainB1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

        F25 = -ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

        F26 = -ChainB0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

        F27 = ChainV1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

        F28 = ChainV0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

        F29 = ChainV0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

        F30 = ChainV1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

        F31 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

        F32 = ChainV0(Spinor(3,1,2),0,0,Spinor(1,1,1))

        F33 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

        F34 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

        F35 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

        F36 = ChainB0(Spinor(3,1,2),0,0,Spinor(1,1,1))

        F37 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

        F38 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

        F39 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

        F40 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

        F41 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

        F42 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

        F43 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

        F44 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

        F45 = ChainV2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F46 = ChainV2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

        F47 = ChainV1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

        F48 = ChainB1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

        F49 = ChainB2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F50 = ChainB2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

        F51 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

        F52 = ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

        F53 = ChainB2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

        F54 = ChainV2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        F55 = ChainV2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

        F56 = ChainB2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

        Pair1 = Pair(ec(5),k(1))

        Pair2 = Pair(ec(5),k(4))

        Pair3 = Pair(ec(5),k(3))

        Pair4 = Pair(ec(5),k(2))

        Sub1872 = F15*F21 + F25*(F27 + F30) + 
     &    F5*(F16 - 2*F34*(Pair1 + Pair4))

        Sub1883 = F10*F21 + (F22 + F24)*F25 + 
     &    F3*(F9 - 2*F26*(Pair1 + Pair4))

        Abb1 = Pair1 - Pair2

        Abb2 = Pair1 - Pair3

        Sub23(HelAll(Neu(3))) = F13*F15 - F5*(F16 - F8*MNeu(Neu(3)))

        Sub25(HelAll(Neu(3))) = F10*F11 - F1*(F12 - F2*MNeu(Neu(3)))

        Sub7092(HelAll(Neu(3))) = 
     &   F23*(F27 + F30) + F15*(F20 + F18*MNeu(Neu(3)))

        Sub14152(HelAll(Neu(3))) = 2*Abb2*F32 - F46 + F48*MNeu(Neu(3))

        Sub14157(HelAll(Neu(3))) = 2*Abb2*F36 - F50 + F47*MNeu(Neu(3))

        Sub48(HelAll(Neu(3))) = F45 + Sub14152(HelAll(Neu(3)))

        Sub49(HelAll(Neu(3))) = F49 + Sub14157(HelAll(Neu(3)))

        Sub22(HelAll(Neu(4))) = F11*F15 - F6*(F14 + F7*MNeu(Neu(4)))

        Sub26(HelAll(Neu(4))) = F10*F13 - F3*(F9 + F4*MNeu(Neu(4)))

        Sub14009(HelAll(Neu(4))) = 2*Abb1*F1 - F55 + F52*MNeu(Neu(4))

        Sub14014(HelAll(Neu(4))) = 2*Abb1*F5 - F53 + F51*MNeu(Neu(4))

        Sub53(HelAll(Neu(4))) = F54 + Sub14009(HelAll(Neu(4)))

        Sub54(HelAll(Neu(4))) = F56 + Sub14014(HelAll(Neu(4)))


        Sub20(HelAll(Neu(3)),Neu(4)) = 
     &   F4*F6*Sub18(Neu(3),Neu(4)) - F2*F5*Sub19(Neu(3),Neu(4))

        Sub21(HelAll(Neu(3)),Neu(4)) = 
     &   F1*F8*Sub18(Neu(3),Neu(4)) - F3*F7*Sub19(Neu(3),Neu(4))

        Sub24(HelAll(Neu(3)),Neu(4)) = 
     &   Sub18(Neu(3),Neu(4))*Sub22(HelAll(Neu(4))) - 
     &    Sub19(Neu(3),Neu(4))*Sub23(HelAll(Neu(3)))

        Sub27(HelAll(Neu(3)),Neu(4)) = 
     &   Sub18(Neu(3),Neu(4))*Sub25(HelAll(Neu(3))) - 
     &    Sub19(Neu(3),Neu(4))*Sub26(HelAll(Neu(4)))

        Sub28(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(-(4*CW2*Sub20(HelAll(Neu(3)),Neu(4))) + 
     &      4*SW2*Sub21(HelAll(Neu(3)),Neu(4)) + 
     &      Sub20(HelAll(Neu(3)),Neu(4)))

        Sub37(HelAll(Neu(3)),Neu(4)) = 
     &   (F23*F31 - F4*F6)*Sub18(Neu(3),Neu(4)) + 
     &    (-(F25*F31) + F2*F5)*Sub19(Neu(3),Neu(4))

        Sub38(HelAll(Neu(3)),Neu(4)) = 
     &   (F23*F28 - F1*F8)*Sub18(Neu(3),Neu(4)) + 
     &    (-(F25*F28) + F3*F7)*Sub19(Neu(3),Neu(4))

        Sub42(HelAll(Neu(3)),Neu(4)) = 
     &   F23*(F22 + F24) + F1*(F12 - 2*F19*(Pair1 + Pair4)) + 
     &    (F10*F18 - F1*F2)*MNeu(Neu(3)) + F10*(F20 - F17*MNeu(Neu(4)))

        Sub45(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(4*SW2*Sub37(HelAll(Neu(3)),Neu(4)) - 
     &      4*CW2*Sub38(HelAll(Neu(3)),Neu(4)) + 
     &      Sub38(HelAll(Neu(3)),Neu(4)))

        Sub121(HelAll(Neu(3)),Neu(4)) = 
     &   F3*F4*MNeu(Neu(4)) + F10*(F17*MNeu(Neu(3)) - F18*MNeu(Neu(4)))

        Sub172(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(-(4*CW2*Sub24(HelAll(Neu(3)),Neu(4))) + 
     &      4*SW2*Sub27(HelAll(Neu(3)),Neu(4)) + 
     &      Sub24(HelAll(Neu(3)),Neu(4)))

        Sub1875(HelAll(Neu(3)),Neu(4)) = 
     &   -(F5*F8*MNeu(Neu(3))) + 
     &    F15*(F17*MNeu(Neu(3)) - F18*MNeu(Neu(4)))

        Sub39(HelAll(Neu(3)),Neu(4)) = 
     &   F6*(F14 - 2*F29*(Pair1 + Pair4)) - 
     &    (F15*F17 - F6*F7)*MNeu(Neu(4)) + Sub7092(HelAll(Neu(3)))

        Sub40(HelAll(Neu(3)),Neu(4)) = 
     &   Sub1872 + Sub1875(HelAll(Neu(3)),Neu(4))

        Sub41(HelAll(Neu(3)),Neu(4)) = 
     &   Sub18(Neu(3),Neu(4))*Sub39(HelAll(Neu(3)),Neu(4)) - 
     &    Sub19(Neu(3),Neu(4))*Sub40(HelAll(Neu(3)),Neu(4))

        Sub43(HelAll(Neu(3)),Neu(4)) = Sub1883 + Sub121(HelAll(Neu(3)),Neu(4))

        Sub44(HelAll(Neu(3)),Neu(4)) = 
     &   Sub18(Neu(3),Neu(4))*Sub42(HelAll(Neu(3)),Neu(4)) - 
     &    Sub19(Neu(3),Neu(4))*Sub43(HelAll(Neu(3)),Neu(4))

        Sub137(HelAll(Neu(3)),Neu(4)) = 
     &   1/SW2*(-(4*CW2*Sub41(HelAll(Neu(3)),Neu(4))) + 
     &      4*SW2*Sub44(HelAll(Neu(3)),Neu(4)) + 
     &      Sub41(HelAll(Neu(3)),Neu(4)))



        Sub29(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   Sub172(HelAll(Neu(3)),Neu(4)) + 
     &    Mf(3,Gen(1))*Sub28(HelAll(Neu(3)),Neu(4))

        Sub46(HelAll(Gen(1)),Neu(3),Neu(4)) = 
     &   -Sub137(HelAll(Neu(3)),Neu(4)) + 
     &    Mf(3,Gen(1))*Sub45(HelAll(Neu(3)),Neu(4))


        LOOP(Sfe6, 1,2,1)

        Sub6(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F32*Sub3(Gen(1),Neu(3),Sfe6) - F36*Sub5(Gen(1),Neu(3),Sfe6)

        Sub47(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   F47*Sub3(Gen(1),Neu(3),Sfe6) - F48*Sub5(Gen(1),Neu(3),Sfe6)

        Sub50(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   Sub3(Gen(1),Neu(3),Sfe6)*Sub48(HelAll(Neu(3))) - 
     &    Sub49(HelAll(Neu(3)))*Sub5(Gen(1),Neu(3),Sfe6)

        Sub51(HelAll(Gen(1)),Neu(3),Sfe6) = 
     &   Mf(3,Gen(1))*Sub47(HelAll(Gen(1)),Neu(3),Sfe6) + 
     &    Sub50(HelAll(Gen(1)),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub34(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   F5*Sub16(Gen(1),Neu(4),Sfe6) - F1*Sub9(Gen(1),Neu(4),Sfe6)

        Sub55(HelAll(Gen(1)),Neu(4),Sfe6) = 
     &   Sub16(Gen(1),Neu(4),Sfe6)*Sub54(HelAll(Neu(4))) - 
     &    Sub53(HelAll(Neu(4)))*Sub9(Gen(1),Neu(4),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub13(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   F34*Sub11(Gen(2),Neu(3),Sfe6) - F19*Sub12(Gen(2),Neu(3),Sfe6)

        Sub33(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   F2*Sub11(Gen(2),Neu(3),Sfe6) - F8*Sub12(Gen(2),Neu(3),Sfe6)

        Sub35(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   (F16 - F43 - F8*MNeu(Neu(3)))*Sub11(Gen(2),Neu(3),Sfe6) - 
     &    (F12 - F44 - F2*MNeu(Neu(3)))*Sub12(Gen(2),Neu(3),Sfe6)

        Sub36(HelAll(Gen(2)),Neu(3),Sfe6) = 
     &   Mf(3,Gen(2))*Sub33(HelAll(Gen(2)),Neu(3),Sfe6) - 
     &    Sub35(HelAll(Gen(2)),Neu(3),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub8(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   F39*Sub2(Gen(2),Neu(4),Sfe6) - F42*Sub7(Gen(2),Neu(4),Sfe6)

        Sub30(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   (F37 - F40 - F33*MNeu(Neu(4)))*Sub2(Gen(2),Neu(4),Sfe6) + 
     &    (F38 - F41 + F35*MNeu(Neu(4)))*Sub7(Gen(2),Neu(4),Sfe6)

        Sub31(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   F35*Sub2(Gen(2),Neu(4),Sfe6) - F33*Sub7(Gen(2),Neu(4),Sfe6)

        Sub32(HelAll(Gen(2)),Neu(4),Sfe6) = 
     &   Sub30(HelAll(Gen(2)),Neu(4),Sfe6) - 
     &    Mf(3,Gen(2))*Sub31(HelAll(Gen(2)),Neu(4),Sfe6)

        ENDLOOP(Sfe6)

        LOOP(Sfe6, 1,2,1)

        Sub17(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   -(Sub13(HelAll(Gen(2)),Neu(3),Sfe6)*
     &      (F5*Sub16(Gen(1),Neu(4),Sfe6) - F1*Sub9(Gen(1),Neu(4),Sfe6)))

        Sub52(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   -(Sub13(HelAll(Gen(2)),Neu(3),Sfe6)*
     &      (F52*Sub16(Gen(1),Neu(4),Sfe6) - F51*Sub9(Gen(1),Neu(4),Sfe6)))

        Sub18509(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   (2*Abb1*Sub17(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6))/
     &     (U - Sub18508(Gen(2),Sfe6)) + 
     &    (Sub34(HelAll(Gen(1)),Neu(4),Sfe6)*
     &       Sub36(HelAll(Gen(2)),Neu(3),Sfe6))/
     &     (Mf2(3,Gen(2)) + Sub18507(Gen(1),Gen(2),Neu(3),Neu(4)))

        Sub56(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   Mf(3,Gen(1))*Sub52(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) - 
     &    Sub13(HelAll(Gen(2)),Neu(3),Sfe6)*
     &     Sub55(HelAll(Gen(1)),Neu(4),Sfe6)

        Sub18510(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   -(Sub56(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6)/
     &       ((Mf2(3,Gen(1)) + Sub1661(Gen(1),Gen(2),Neu(3),Neu(4)))*
     &         (U - Sub18508(Gen(2),Sfe6)))) - 
     &    (Sub32(HelAll(Gen(2)),Neu(4),Sfe6)*
     &       Sub6(HelAll(Gen(1)),Neu(3),Sfe6))/
     &     ((Mf2(3,Gen(2)) + Sub18507(Gen(1),Gen(2),Neu(3),Neu(4)))*
     &       (T - Sub595(Gen(1),Sfe6)))

        Sub18511(HelAll(Gen(1)),Gen(2),Neu(3),Neu(4),Sfe6) = 
     &   -(Sub51(HelAll(Gen(1)),Neu(3),Sfe6)/
     &       (Mf2(3,Gen(1)) + Sub1661(Gen(1),Gen(2),Neu(3),Neu(4)))) + 
     &    (2*Abb2*Sub6(HelAll(Gen(1)),Neu(3),Sfe6))/
     &     (T - Sub595(Gen(1),Sfe6))

        ENDLOOP(Sfe6)

#include "virt_contains.h"

        end

