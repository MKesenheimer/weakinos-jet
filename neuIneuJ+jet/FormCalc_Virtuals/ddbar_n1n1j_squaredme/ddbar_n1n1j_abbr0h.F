#if 0
* ddbar_n1n1j_abbr0h.F
* abbreviations for {F[4, {1, Col1}], -F[4, {1, Col2}]} -> {F[11, {1}], F[11, {1}], V[5, {Glu5}]}
* generated by FormCalc 8.4 on 24-May-2016 15:58
#endif

#include "ddbar_n1n1j_vars.h"
#include "contains.h"


	subroutine ddbar_n1n1j_abbr0h
	implicit none

#include "ddbar_n1n1j_vars.h"


	F17 = -ChainV0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

	F18 = ChainB0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

	F1 = -ChainV0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

	F2 = ChainB0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

	F29 = ChainV0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

	F19 = -ChainB0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

	F15 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

	F7 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

	F31 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

	F6 = ChainV1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

	F28 = ChainV1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

	F27 = ChainV1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

	F10 = -ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

	F8 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

	F34 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

	F3 = -ChainB1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

	F25 = -ChainB1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

	F23 = -ChainB1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

	F45 = ChainV1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

	F43 = ChainB1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

	F49 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

	F26 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

	F11 = ChainV1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

	F20 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F50 = ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

	F24 = -ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

	F12 = -ChainB1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

	F22 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F41 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

	F35 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

	F37 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

	F14 = ChainV2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

	F16 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

	F42 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

	F39 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

	F40 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

	F9 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

	F13 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

	F48 = ChainV2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F44 = ChainV2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

	F46 = ChainB2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F47 = ChainB2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

	F51 = ChainV2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F52 = ChainV2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

	F53 = ChainB2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F54 = ChainB2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

	Pair1 = Pair(ec(5),k(1))

	Pair4 = Pair(ec(5),k(2))

	Pair3 = Pair(ec(5),k(3))

	Pair2 = Pair(ec(5),k(4))

	F30 = ChainV0(Spinor(3,1,2),0,0,Spinor(1,1,1))

	F33 = ChainB0(Spinor(3,1,2),0,0,Spinor(1,1,1))

	F5 = ChainV0(Spinor(4,1,2),0,0,Spinor(1,1,1))

	F4 = ChainB0(Spinor(4,1,2),0,0,Spinor(1,1,1))

	F32 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

	F36 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

	F21 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

	F38 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

	Sub17 = F15*(2*F17 - 2*F18) + F2*F6 + F4*F7

	Sub19 = -(F10*(2*F17 - 2*F18)) + F1*F3 + F5*F8

	Abb1 = Pair1 - Pair2

	Abb2 = Pair1 - Pair3

	Sub9 = 2*Abb2*F30 - F44 + F48 + F43*MNeu(1)

	Sub10 = 2*Abb2*F33 + F46 - F47 + F45*MNeu(1)

	Sub16 = 2*Abb1*F4 + F53 - F54 + F49*MNeu(1)

	Sub15 = 2*Abb1*F5 + F51 - F52 + F50*MNeu(1)

        Sub11 = (F11 - F12)*F15 - F14*F2 + F16*F4 - 
     &    (F2*F6 + F4*F7)*MNeu(1)

        Sub13 = F10*(F11 - F12) + F1*(F9 + F3*MNeu(1)) + 
     &    F5*(-F13 + F8*MNeu(1))

        Sub18 = F15*(F20 - F22) + (-F24 + F26)*(F27 + F28) + 
     &    F2*(F14 - 2*F29*(Pair1 + Pair4)) + 
     &    F4*(-F16 + 2*F32*(Pair1 + Pair4)) + Sub17*MNeu(1)

        Sub20 = F10*(F20 - F22) - F23*(F24 - F26) + 
     &    F25*(-F24 + F26) - F1*(F9 - 2*F19*(Pair1 + Pair4)) + 
     &    F5*(F13 - 2*F21*(Pair1 + Pair4)) - Sub19*MNeu(1)

	Sub14 = -(1/SW2*(Sub11 + 2*CW2*Sub11 - 2*SW2*Sub13))

	Sub21 = -(1/SW2*(Sub18 + 2*CW2*Sub18 - 2*SW2*Sub20))

	LOOP(Sfe6, 1,2,1)

        Sub7(HelInd(Sfe6)) = 
     &   (F35 - F37 + F31*MNeu(1))*Sub5(Sfe6) + 
     &    (F39 - F40 + F34*MNeu(1))*Sub6(Sfe6)

        Sub8(HelInd(Sfe6)) = 
     &   (F16 - F41 - F7*MNeu(1))*Sub5(Sfe6) + 
     &    (F13 - F42 - F8*MNeu(1))*Sub6(Sfe6)

        Sub25(HelInd(Sfe6)) = 
     &   (2*Abb2*(F30*Sub1(Sfe6) + F33*Sub3(Sfe6)))/
     &     (T - MSf2(Sfe6,4,1)) - 
     &    (Sub9*Sub1(Sfe6) + Sub10*Sub3(Sfe6))/(MD2 - Sub22)

        Sub24(HelInd(Sfe6)) = 
     &   (2*Abb1*(F5*Sub1(Sfe6) + F4*Sub3(Sfe6)))/
     &     (T14 - MSf2(Sfe6,4,1)) - 
     &    (Sub15*Sub1(Sfe6) + Sub16*Sub3(Sfe6))/(MD2 - Sub22)

        Sub26(HelInd(Sfe6)) = 
     &   ((F30*Sub1(Sfe6) + F33*Sub3(Sfe6))*Sub7(HelInd(Sfe6)))/
     &     (T - MSf2(Sfe6,4,1)) + 
     &    ((F5*Sub1(Sfe6) + F4*Sub3(Sfe6))*Sub8(HelInd(Sfe6)))/
     &     (T14 - MSf2(Sfe6,4,1))

	ENDLOOP(Sfe6)

#include "contains.h"

	end
