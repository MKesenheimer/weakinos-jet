#if 0
* ubarg_n1n1j_abbr0h.F
* abbreviations for {-F[3, {1, Col1}], V[5, {Glu2}]} -> {F[11, {1}], F[11, {1}], -F[3, {1, Col5}]}
* generated by FormCalc 8.4 on 24-May-2016 15:58
#endif

#include "ubarg_n1n1j_vars.h"
#include "contains.h"


	subroutine ubarg_n1n1j_abbr0h
	implicit none

#include "ubarg_n1n1j_vars.h"


	F21 = ChainV0(Spinor(1,-1,2),0,1,Spinor(4,1,2))

	F13 = -ChainB0(Spinor(1,-1,2),0,1,Spinor(4,1,2))

	F14 = ChainV0(Spinor(5,-1,1),1,0,Spinor(3,-1,1))

	F17 = ChainB0(Spinor(5,-1,1),1,0,Spinor(3,-1,1))

	F25 = ChainV1(Spinor(1,-1,2),0,e(2),0,Spinor(5,-1,1))

	F26 = ChainV1(Spinor(1,-1,2),0,k(2),0,Spinor(5,-1,1))

	F19 = ChainB1(Spinor(1,-1,2),0,e(2),0,Spinor(5,-1,1))

	F16 = ChainB1(Spinor(1,-1,2),0,k(2),0,Spinor(5,-1,1))

	F18 = ChainV1(Spinor(4,1,2),0,e(2),0,Spinor(3,-1,1))

	F22 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F23 = -ChainB1(Spinor(4,1,2),0,e(2),0,Spinor(3,-1,1))

	F24 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F11 = -ChainV2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(3,-1,1))

	F20 = ChainV2(Spinor(1,-1,2),0,e(2),k(2),1,Spinor(4,1,2))

	F12 = -ChainB2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(3,-1,1))

	F15 = -ChainB2(Spinor(1,-1,2),0,e(2),k(2),1,Spinor(4,1,2))

	F29 = -ChainV2(Spinor(3,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

	F30 = ChainB2(Spinor(3,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

	Pair2 = Pair(e(2),k(3))

	Pair4 = Pair(e(2),k(4))

	F5 = -ChainV2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(4,-1,1))

	F6 = -ChainB2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(4,-1,1))

	F27 = -ChainV2(Spinor(4,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

	F28 = ChainB2(Spinor(4,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

	Pair1 = Pair(e(2),k(1))

	Pair3 = Pair(e(2),k(5))

	F7 = -ChainV0(Spinor(1,-1,2),0,0,Spinor(3,-1,1))

	F1 = -ChainV0(Spinor(1,-1,2),0,0,Spinor(4,-1,1))

	F10 = -ChainB0(Spinor(1,-1,2),0,0,Spinor(3,-1,1))

	F2 = -ChainB0(Spinor(1,-1,2),0,0,Spinor(4,-1,1))

	F4 = -ChainV0(Spinor(3,1,2),0,0,Spinor(5,-1,1))

	F3 = ChainB0(Spinor(3,1,2),0,0,Spinor(5,-1,1))

	F8 = -ChainV0(Spinor(4,1,2),0,0,Spinor(5,-1,1))

	F9 = ChainB0(Spinor(4,1,2),0,0,Spinor(5,-1,1))

	Abb1 = Pair1 - Pair2

	Abb2 = Pair1 - Pair4

	Sub15 = -(F8*(F12 + 2*F10*Pair1)) + F14*(F15 + 2*F13*Pair1)

	Sub16 = F17*(F20 + 2*F21*Pair1) - F9*(F11 + 2*F7*Pair1)

        Sub11 = -(F16*(F18 - F23)) + F19*(F22 - F24) - 
     &    F8*(F12 + 2*F10*Pair3) + F14*(F15 + 2*F13*Pair3)

        Sub13 = -((F22 - F24)*F25) - (-F18 + F23)*F26 + 
     &    F17*(F20 + 2*F21*Pair3) - F9*(F11 + 2*F7*Pair3)

	Sub14 = -(1/SW2*(Sub13 - 4*(SW2*Sub11 + CW2*Sub13)))

	Sub17 = -(1/SW2*(Sub16 - 4*(SW2*Sub15 + CW2*Sub16)))

	LOOP(Sfe6, 1,2,1)

        Sub8(HelInd(Sfe6)) = 
     &   (F11 + 2*F7*Pair1)*Sub3(Sfe6) + 
     &    (-F12 - 2*F10*Pair1)*Sub4(Sfe6)

        Sub10(HelInd(Sfe6)) = 
     &   (F29 + 2*F4*Pair3)*Sub1(Sfe6) + 
     &    (-F30 - 2*F3*Pair3)*Sub7(Sfe6)

        Sub5(HelInd(Sfe6)) = 
     &   (F5 + 2*F1*Pair1)*Sub3(Sfe6) + 
     &    (-F6 - 2*F2*Pair1)*Sub4(Sfe6)

        Sub9(HelInd(Sfe6)) = 
     &   (F27 + 2*F8*Pair3)*Sub1(Sfe6) + 
     &    (-F28 - 2*F9*Pair3)*Sub7(Sfe6)

        Sub19(HelInd(Sfe6)) = 
     &   Sub10(HelInd(Sfe6))/(MU2 - S - T24 - U + 2*MNeu2(1)) + 
     &    (2*Abb2*(F4*Sub1(Sfe6) - F3*Sub7(Sfe6)))/
     &     (Sub18 - MSf2(Sfe6,3,1))

        Sub21(HelInd(Sfe6)) = 
     &   (2*Abb1*(F7*Sub3(Sfe6) - F10*Sub4(Sfe6)))/
     &     (T - MSf2(Sfe6,3,1)) - Sub8(HelInd(Sfe6))/(MU2 - S)

	ENDLOOP(Sfe6)

#include "contains.h"

	end
