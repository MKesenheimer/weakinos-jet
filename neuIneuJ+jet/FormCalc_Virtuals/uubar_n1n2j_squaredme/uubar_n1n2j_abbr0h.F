#if 0
* uubar_n1n2j_abbr0h.F
* abbreviations for {F[3, {1, Col1}], -F[3, {1, Col2}]} -> {F[11, {1}], F[11, {2}], V[5, {Glu5}]}
* generated by FormCalc 8.4 on 10-Jun-2016 12:27
#endif

#include "uubar_n1n2j_vars.h"
#include "contains.h"


	subroutine uubar_n1n2j_abbr0h
	implicit none

#include "uubar_n1n2j_vars.h"


	F1 = -ChainV0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

	F4 = ChainB0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

	F20 = ChainV0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

	F21 = -ChainB0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

	F16 = -ChainV0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

	F18 = ChainB0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

	F15 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

	F6 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

	F33 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

	F7 = ChainV1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

	F24 = ChainV1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

	F30 = ChainV1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

	F10 = -ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

	F8 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

	F36 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

	F3 = -ChainB1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

	F22 = -ChainB1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

	F28 = -ChainB1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

	F42 = ChainV1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

	F44 = ChainB1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

	F51 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

	F23 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

	F11 = ChainV1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

	F29 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F48 = ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

	F26 = -ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

	F12 = -ChainB1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

	F19 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F41 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

	F32 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

	F35 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

	F14 = ChainV2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

	F17 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

	F43 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

	F38 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

	F39 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

	F9 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

	F13 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

	F45 = ChainV2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F46 = ChainV2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

	F47 = ChainB2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F49 = ChainB2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

	F54 = ChainV2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F50 = ChainV2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

	F52 = ChainB2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F53 = ChainB2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

	Pair1 = Pair(ec(5),k(1))

	Pair4 = Pair(ec(5),k(2))

	Pair3 = Pair(ec(5),k(3))

	Pair2 = Pair(ec(5),k(4))

	F40 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

	F37 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

	F5 = ChainV0(Spinor(4,1,2),0,0,Spinor(1,1,1))

	F2 = ChainB0(Spinor(4,1,2),0,0,Spinor(1,1,1))

	F25 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

	F27 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

	F31 = ChainV0(Spinor(3,1,2),0,0,Spinor(1,1,1))

	F34 = ChainB0(Spinor(3,1,2),0,0,Spinor(1,1,1))

	Abb1 = Pair1 - Pair2

	Abb2 = Pair1 - Pair3

	Sub21 = F12*F15 - F2*(F17 - F6*MNeu(1))

	Sub23 = F10*F11 - F5*(F13 - F8*MNeu(1))

	Sub24 = F10*F12 - F1*(F9 + F3*MNeu(2))

	Sub19 = F11*F15 - F4*(F14 + F7*MNeu(2))

	Sub18 = 2*Abb2*F34 + F47 - F49 + F42*MNeu(1)

	Sub17 = 2*Abb2*F31 + F45 - F46 + F44*MNeu(1)

	Sub15 = 2*Abb1*F5 - F50 + F54 + F48*MNeu(2)

	Sub16 = 2*Abb1*F2 + F52 - F53 + F51*MNeu(2)

        Sub26 = F23*(F24 + F30) + 
     &    F4*(F14 - 2*F20*(Pair1 + Pair4)) + 
     &    F15*(F29 + F16*MNeu(1)) - (F15*F18 - F4*F7)*MNeu(2)

        Sub28 = F23*(F22 + F28) + 
     &    F5*(F13 - 2*F27*(Pair1 + Pair4)) + 
     &    (F10*F16 - F5*F8)*MNeu(1) + F10*(F29 - F18*MNeu(2))

        Sub29 = F26*(F22 + F28) + 
     &    F1*(F9 - 2*F21*(Pair1 + Pair4)) + 
     &    F10*(F19 + F18*MNeu(1)) - (F10*F16 - F1*F3)*MNeu(2)

        Sub27 = F26*(F24 + F30) + 
     &    F2*(F17 - 2*F25*(Pair1 + Pair4) - F6*MNeu(1)) + 
     &    F15*(F19 + F18*MNeu(1) - F16*MNeu(2))

        Sub25 = 1/SW2*(Sub19*Sub20 - Sub21*Sub22 - 
     &      CW2*(4*Sub19*Sub20 - 4*Sub21*Sub22) + 
     &      SW2*(4*Sub20*Sub23 - 4*Sub22*Sub24))

        Sub30 = -(1/SW2*
     &      (CW2*(4*Sub20*Sub26 - 4*Sub22*Sub27) - 
     &        Sub20*(Sub26 + 4*SW2*Sub28) + 
     &        Sub22*(Sub27 + 4*SW2*Sub29)))

	LOOP(Sfe6, 1,2,1)

        Sub13(HelInd(Sfe6)) = 
     &   (F32 - F35 + F33*MNeu(2))*Sub2(Sfe6) - 
     &    (F38 - F39 + F36*MNeu(2))*Sub6(Sfe6)

        Sub14(HelInd(Sfe6)) = 
     &   (F13 - F43 - F8*MNeu(1))*Sub10(Sfe6) - 
     &    (F17 - F41 - F6*MNeu(1))*Sub9(Sfe6)

        Sub33(HelInd(Sfe6)) = 
     &   -(Sub13(HelInd(Sfe6))/(MU2 - Sub32)) + 
     &    (2*Abb2*(F40*Sub2(Sfe6) - F37*Sub6(Sfe6)))/
     &     (T24 - MSf2(Sfe6,3,1))

        Sub34(HelInd(Sfe6)) = 
     &   -(((Sub17*Sub3(Sfe6) - Sub18*Sub5(Sfe6))*
     &         (F40*Sub2(Sfe6) - F37*Sub6(Sfe6)))/
     &       ((MU2 - Sub31)*(T24 - MSf2(Sfe6,3,1)))) - 
     &    (Sub14(HelInd(Sfe6))*(F2*Sub12(Sfe6) - F5*Sub7(Sfe6)))/
     &     ((MU2 - Sub32)*(T14 - MSf2(Sfe6,3,1)))

        Sub35(HelInd(Sfe6)) = 
     &   (-2*Abb1*(F2*Sub12(Sfe6) - F5*Sub7(Sfe6)))/
     &     (T14 - MSf2(Sfe6,3,1)) + 
     &    (Sub16*Sub12(Sfe6) - Sub15*Sub7(Sfe6))/(MU2 - Sub31)

	ENDLOOP(Sfe6)

#include "contains.h"

	end
