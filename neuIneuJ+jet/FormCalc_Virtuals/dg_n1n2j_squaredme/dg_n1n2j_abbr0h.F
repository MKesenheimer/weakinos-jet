#if 0
* dg_n1n2j_abbr0h.F
* abbreviations for {F[4, {1, Col1}], V[5, {Glu2}]} -> {F[11, {1}], F[11, {2}], F[4, {1, Col5}]}
* generated by FormCalc 8.4 on 10-Jun-2016 12:27
#endif

#include "dg_n1n2j_vars.h"
#include "contains.h"


	subroutine dg_n1n2j_abbr0h
	implicit none

#include "dg_n1n2j_vars.h"


	F13 = -ChainV0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

	F17 = ChainB0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

	F27 = ChainV0(Spinor(5,1,2),0,1,Spinor(4,1,2))

	F14 = ChainB0(Spinor(5,1,2),0,1,Spinor(4,1,2))

	F19 = ChainV1(Spinor(4,1,2),0,e(2),0,Spinor(3,-1,1))

	F22 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F25 = -ChainB1(Spinor(4,1,2),0,e(2),0,Spinor(3,-1,1))

	F26 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F23 = ChainV1(Spinor(5,1,2),0,e(2),0,Spinor(1,1,1))

	F28 = ChainV1(Spinor(5,1,2),0,k(2),0,Spinor(1,1,1))

	F21 = ChainB1(Spinor(5,1,2),0,e(2),0,Spinor(1,1,1))

	F16 = ChainB1(Spinor(5,1,2),0,k(2),0,Spinor(1,1,1))

	F9 = ChainV2(Spinor(3,1,2),0,e(2),k(2),0,Spinor(1,1,1))

	F10 = ChainB2(Spinor(3,1,2),0,e(2),k(2),0,Spinor(1,1,1))

	F2 = ChainV2(Spinor(4,1,2),0,e(2),k(2),0,Spinor(1,1,1))

	F4 = ChainB2(Spinor(4,1,2),0,e(2),k(2),0,Spinor(1,1,1))

	F24 = -ChainV2(Spinor(5,1,2),0,e(2),k(2),0,Spinor(3,-1,1))

	F29 = -ChainV2(Spinor(5,1,2),0,e(2),k(2),0,Spinor(4,-1,1))

	F20 = ChainV2(Spinor(5,1,2),0,e(2),k(2),1,Spinor(4,1,2))

	F18 = ChainB2(Spinor(5,1,2),0,e(2),k(2),0,Spinor(3,-1,1))

	F30 = ChainB2(Spinor(5,1,2),0,e(2),k(2),0,Spinor(4,-1,1))

	F15 = ChainB2(Spinor(5,1,2),0,e(2),k(2),1,Spinor(4,1,2))

	Pair2 = Pair(e(2),k(1))

	Pair3 = Pair(e(2),k(3))

	Pair4 = Pair(e(2),k(4))

	Pair1 = Pair(e(2),k(5))

	F1 = -ChainV0(Spinor(5,1,2),0,0,Spinor(3,-1,1))

	F7 = -ChainV0(Spinor(5,1,2),0,0,Spinor(4,-1,1))

	F6 = ChainB0(Spinor(5,1,2),0,0,Spinor(3,-1,1))

	F12 = ChainB0(Spinor(5,1,2),0,0,Spinor(4,-1,1))

	F8 = ChainV0(Spinor(3,1,2),0,0,Spinor(1,1,1))

	F11 = ChainB0(Spinor(3,1,2),0,0,Spinor(1,1,1))

	F5 = ChainV0(Spinor(4,1,2),0,0,Spinor(1,1,1))

	F3 = ChainB0(Spinor(4,1,2),0,0,Spinor(1,1,1))

	Abb1 = Pair2 - Pair3

	Abb2 = Pair2 - Pair4

        Sub24 = F17*(F20 - 2*F27*Pair1)*Sub18 + 
     &    F3*(-F24 + 2*F1*Pair1)*Sub20

        Sub25 = -(F5*(F18 - 2*F6*Pair1)*Sub18) - 
     &    F13*(-F15 + 2*F14*Pair1)*Sub20

	Sub21 = -(F22*F23) + F19*F28 + F17*(F20 - 2*F27*Pair2)

	Sub17 = F16*F19 - F21*F22 + F5*(F18 - 2*F6*Pair2)

	Sub19 = -(F16*F25) + F21*F26 - F13*(F15 - 2*F14*Pair2)

	Sub22 = F23*F26 - F25*F28 - F24*F3 + 2*F1*F3*Pair2

        Sub23 = -(1/SW2*
     &      (Sub18*Sub21 + Sub20*Sub22 - 
     &        2*SW2*(Sub17*Sub18 + Sub19*Sub20) + 
     &        2*CW2*(Sub18*Sub21 + Sub20*Sub22)))

	Sub26 = 1/SW2*(Sub24 + 2*(CW2*Sub24 + SW2*Sub25))

	LOOP(Sfe6, 1,2,1)

        Sub15(HelInd(Sfe6)) = 
     &   (F29 - 2*F7*Pair1)*Sub12(Sfe6) + 
     &    (F30 - 2*F12*Pair1)*Sub13(Sfe6)

        Sub16(HelInd(Sfe6)) = 
     &   (F24 - 2*F1*Pair1)*Sub2(Sfe6) + 
     &    (F18 - 2*F6*Pair1)*Sub3(Sfe6)

        Sub7(HelInd(Sfe6)) = 
     &   (F2 - 2*F5*Pair2)*Sub4(Sfe6) + 
     &    (F4 - 2*F3*Pair2)*Sub6(Sfe6)

        Sub14(HelInd(Sfe6)) = 
     &   (F10 - 2*F11*Pair2)*Sub10(Sfe6) + 
     &    (F9 - 2*F8*Pair2)*Sub8(Sfe6)

        Sub32(HelInd(Sfe6)) = 
     &   (-2*Abb1*(F7*Sub12(Sfe6) + F12*Sub13(Sfe6)))/
     &     (Sub30 + MSf2(Sfe6,4,1)) + 
     &    Sub15(HelInd(Sfe6))/(MD2 - Sub27)

        Sub29(HelInd(Sfe6)) = 
     &   Sub16(HelInd(Sfe6))/(MD2 - Sub27) - 
     &    (2*Abb2*(F1*Sub2(Sfe6) + F6*Sub3(Sfe6)))/
     &     (Sub28 + MSf2(Sfe6,4,1))

        Sub31(HelInd(Sfe6)) = 
     &   -(((F7*Sub12(Sfe6) + F12*Sub13(Sfe6))*
     &         Sub14(HelInd(Sfe6)))/(Sub30 + MSf2(Sfe6,4,1))) + 
     &    ((F1*Sub2(Sfe6) + F6*Sub3(Sfe6))*Sub7(HelInd(Sfe6)))/
     &     (Sub28 + MSf2(Sfe6,4,1))

	ENDLOOP(Sfe6)

#include "contains.h"

	end
