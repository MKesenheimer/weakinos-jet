#if 0
* ubarg_n1n2j_abbr0h.F
* abbreviations for {-F[3, {1, Col1}], V[5, {Glu2}]} -> {F[11, {1}], F[11, {2}], -F[3, {1, Col5}]}
* generated by FormCalc 8.4 on 10-Jun-2016 12:27
#endif

#include "ubarg_n1n2j_vars.h"
#include "contains.h"


	subroutine ubarg_n1n2j_abbr0h
	implicit none

#include "ubarg_n1n2j_vars.h"


	F19 = ChainV0(Spinor(1,-1,2),0,1,Spinor(4,1,2))

	F13 = -ChainB0(Spinor(1,-1,2),0,1,Spinor(4,1,2))

	F14 = ChainV0(Spinor(5,-1,1),1,0,Spinor(3,-1,1))

	F17 = ChainB0(Spinor(5,-1,1),1,0,Spinor(3,-1,1))

	F25 = ChainV1(Spinor(1,-1,2),0,e(2),0,Spinor(5,-1,1))

	F26 = ChainV1(Spinor(1,-1,2),0,k(2),0,Spinor(5,-1,1))

	F20 = ChainB1(Spinor(1,-1,2),0,e(2),0,Spinor(5,-1,1))

	F16 = ChainB1(Spinor(1,-1,2),0,k(2),0,Spinor(5,-1,1))

	F18 = ChainV1(Spinor(4,1,2),0,e(2),0,Spinor(3,-1,1))

	F22 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F23 = -ChainB1(Spinor(4,1,2),0,e(2),0,Spinor(3,-1,1))

	F24 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F11 = -ChainV2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(3,-1,1))

	F6 = -ChainV2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(4,-1,1))

	F21 = ChainV2(Spinor(1,-1,2),0,e(2),k(2),1,Spinor(4,1,2))

	F12 = -ChainB2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(3,-1,1))

	F5 = -ChainB2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(4,-1,1))

	F15 = -ChainB2(Spinor(1,-1,2),0,e(2),k(2),1,Spinor(4,1,2))

	F29 = -ChainV2(Spinor(3,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

	F30 = ChainB2(Spinor(3,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

	F27 = -ChainV2(Spinor(4,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

	F28 = ChainB2(Spinor(4,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

	Pair2 = Pair(e(2),k(1))

	Pair3 = Pair(e(2),k(3))

	Pair4 = Pair(e(2),k(4))

	Pair1 = Pair(e(2),k(5))

	F7 = -ChainV0(Spinor(1,-1,2),0,0,Spinor(3,-1,1))

	F1 = -ChainV0(Spinor(1,-1,2),0,0,Spinor(4,-1,1))

	F10 = -ChainB0(Spinor(1,-1,2),0,0,Spinor(3,-1,1))

	F4 = -ChainB0(Spinor(1,-1,2),0,0,Spinor(4,-1,1))

	F2 = -ChainV0(Spinor(3,1,2),0,0,Spinor(5,-1,1))

	F3 = ChainB0(Spinor(3,1,2),0,0,Spinor(5,-1,1))

	F8 = -ChainV0(Spinor(4,1,2),0,0,Spinor(5,-1,1))

	F9 = ChainB0(Spinor(4,1,2),0,0,Spinor(5,-1,1))

	Abb1 = Pair2 - Pair3

	Abb2 = Pair2 - Pair4

        Sub19 = F8*(F12 + 2*F10*Pair2)*Sub17 + 
     &    F14*(-F15 - 2*F13*Pair2)*Sub18

        Sub20 = F17*(F21 + 2*F19*Pair2)*Sub17 + 
     &    F9*(-F11 - 2*F7*Pair2)*Sub18

	Sub22 = F16*F18 - F20*F22 + F8*(F12 + 2*F10*Pair1)

	Sub24 = -(F22*F25) + F18*F26 + F17*(F21 + 2*F19*Pair1)

	Sub23 = F16*F23 - F20*F24 + F14*(F15 + 2*F13*Pair1)

	Sub25 = F24*F25 - F23*F26 - F11*F9 - 2*F7*F9*Pair1

	Sub21 = 1/SW2*(Sub20 + 4*SW2*Sub19 - 4*CW2*Sub20)

        Sub26 = -(1/SW2*
     &      (-(Sub17*(Sub24 + 4*SW2*Sub22)) - 
     &        Sub18*(Sub25 - 4*SW2*Sub23) + 
     &        4*CW2*(Sub17*Sub24 + Sub18*Sub25)))

	LOOP(Sfe6, 1,2,1)

        Sub12(HelInd(Sfe6)) = 
     &   (F11 + 2*F7*Pair2)*Sub10(Sfe6) + 
     &    (-F12 - 2*F10*Pair2)*Sub11(Sfe6)

        Sub16(HelInd(Sfe6)) = 
     &   (F29 + 2*F2*Pair1)*Sub3(Sfe6) + 
     &    (-F30 - 2*F3*Pair1)*Sub5(Sfe6)

        Sub7(HelInd(Sfe6)) = 
     &   (F6 + 2*F1*Pair2)*Sub2(Sfe6) + 
     &    (-F5 - 2*F4*Pair2)*Sub6(Sfe6)

        Sub15(HelInd(Sfe6)) = 
     &   (F28 + 2*F9*Pair1)*Sub14(Sfe6) + 
     &    (-F27 - 2*F8*Pair1)*Sub8(Sfe6)

        Sub32(HelInd(Sfe6)) = 
     &   (2*Abb1*(F7*Sub10(Sfe6) - F10*Sub11(Sfe6)))/
     &     (T - MSf2(Sfe6,3,1)) - Sub12(HelInd(Sfe6))/(MU2 - S)

        Sub28(HelInd(Sfe6)) = 
     &   ((F7*Sub10(Sfe6) - F10*Sub11(Sfe6))*Sub15(HelInd(Sfe6)))/
     &     (T - MSf2(Sfe6,3,1)) + 
     &    (Sub16(HelInd(Sfe6))*(F1*Sub2(Sfe6) - F4*Sub6(Sfe6)))/
     &     (T14 - MSf2(Sfe6,3,1))

        Sub30(HelInd(Sfe6)) = 
     &   (2*Abb2*(F1*Sub2(Sfe6) - F4*Sub6(Sfe6)))/
     &     (T14 - MSf2(Sfe6,3,1)) - Sub7(HelInd(Sfe6))/(MU2 - S)

	ENDLOOP(Sfe6)

#include "contains.h"

	end
