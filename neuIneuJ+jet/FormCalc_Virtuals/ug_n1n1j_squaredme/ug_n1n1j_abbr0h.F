#if 0
* ug_n1n1j_abbr0h.F
* abbreviations for {F[3, {1, Col1}], V[5, {Glu2}]} -> {F[11, {1}], F[11, {1}], F[3, {1, Col5}]}
* generated by FormCalc 8.4 on 24-May-2016 15:58
#endif

#include "ug_n1n1j_vars.h"
#include "contains.h"


	subroutine ug_n1n1j_abbr0h
	implicit none

#include "ug_n1n1j_vars.h"


	Pair2 = Pair(e(2),k(3))

	F13 = -ChainV0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

	F18 = ChainB0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

	F27 = ChainV0(Spinor(5,1,2),0,1,Spinor(4,1,2))

	F14 = ChainB0(Spinor(5,1,2),0,1,Spinor(4,1,2))

	F19 = ChainV1(Spinor(4,1,2),0,e(2),0,Spinor(3,-1,1))

	F22 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F24 = -ChainB1(Spinor(4,1,2),0,e(2),0,Spinor(3,-1,1))

	F26 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F20 = ChainV1(Spinor(5,1,2),0,e(2),0,Spinor(1,1,1))

	F28 = ChainV1(Spinor(5,1,2),0,k(2),0,Spinor(1,1,1))

	F23 = ChainB1(Spinor(5,1,2),0,e(2),0,Spinor(1,1,1))

	F17 = ChainB1(Spinor(5,1,2),0,k(2),0,Spinor(1,1,1))

	F10 = ChainV2(Spinor(3,1,2),0,e(2),k(2),0,Spinor(1,1,1))

	F11 = ChainB2(Spinor(3,1,2),0,e(2),k(2),0,Spinor(1,1,1))

	F3 = ChainV2(Spinor(4,1,2),0,e(2),k(2),0,Spinor(1,1,1))

	F4 = ChainB2(Spinor(4,1,2),0,e(2),k(2),0,Spinor(1,1,1))

	F25 = -ChainV2(Spinor(5,1,2),0,e(2),k(2),0,Spinor(3,-1,1))

	F29 = -ChainV2(Spinor(5,1,2),0,e(2),k(2),0,Spinor(4,-1,1))

	F21 = ChainV2(Spinor(5,1,2),0,e(2),k(2),1,Spinor(4,1,2))

	F16 = ChainB2(Spinor(5,1,2),0,e(2),k(2),0,Spinor(3,-1,1))

	F30 = ChainB2(Spinor(5,1,2),0,e(2),k(2),0,Spinor(4,-1,1))

	F15 = ChainB2(Spinor(5,1,2),0,e(2),k(2),1,Spinor(4,1,2))

	Pair1 = Pair(e(2),k(1))

	Pair4 = Pair(e(2),k(4))

	Pair3 = Pair(e(2),k(5))

	F2 = ChainV0(Spinor(4,1,2),0,0,Spinor(1,1,1))

	F5 = ChainB0(Spinor(4,1,2),0,0,Spinor(1,1,1))

	F1 = -ChainV0(Spinor(5,1,2),0,0,Spinor(3,-1,1))

	F7 = -ChainV0(Spinor(5,1,2),0,0,Spinor(4,-1,1))

	F6 = ChainB0(Spinor(5,1,2),0,0,Spinor(3,-1,1))

	F12 = ChainB0(Spinor(5,1,2),0,0,Spinor(4,-1,1))

	F8 = ChainV0(Spinor(3,1,2),0,0,Spinor(1,1,1))

	F9 = ChainB0(Spinor(3,1,2),0,0,Spinor(1,1,1))

	Abb1 = Pair1 - Pair2

	Abb2 = Pair1 - Pair4

	Sub18 = -(F5*(F25 - 2*F1*Pair3)) + F18*(F21 - 2*F27*Pair3)

	Sub17 = F13*(F15 - 2*F14*Pair3) - F2*(F16 - 2*F6*Pair3)

        Sub15 = -(F20*(F22 - F26)) - (-F19 + F24)*F28 - 
     &    F5*(F25 - 2*F1*Pair1) + F18*(F21 - 2*F27*Pair1)

        Sub13 = -(F16*F2) + F22*F23 - F17*(F19 - F24) - 
     &    F23*F26 + 2*F2*F6*Pair1 + F13*(F15 - 2*F14*Pair1)

	Sub16 = -(1/SW2*(Sub15 - 4*(SW2*Sub13 + CW2*Sub15)))

	Sub19 = -(1/SW2*(Sub18 - 4*(SW2*Sub17 + CW2*Sub18)))

	LOOP(Sfe6, 1,2,1)

        Sub11(HelInd(Sfe6)) = 
     &   (F25 - 2*F1*Pair3)*Sub4(Sfe6) + 
     &    (-F16 + 2*F6*Pair3)*Sub5(Sfe6)

	Sub21(HelInd(Sfe6)) = -(Abb1*(F7*Sub4(Sfe6) - F12*Sub5(Sfe6)))

        Sub6(HelInd(Sfe6)) = 
     &   (F29 - 2*F7*Pair3)*Sub4(Sfe6) + 
     &    (-F30 + 2*F12*Pair3)*Sub5(Sfe6)

        Sub9(HelInd(Sfe6)) = 
     &   (F4 - 2*F5*Pair1)*Sub2(Sfe6) + 
     &    (-F3 + 2*F2*Pair1)*Sub7(Sfe6)

        Sub8(HelInd(Sfe6)) = 
     &   (F11 - 2*F9*Pair1)*Sub2(Sfe6) + 
     &    (-F10 + 2*F8*Pair1)*Sub7(Sfe6)

        Sub12(HelInd(Sfe6)) = 
     &   -(Sub11(HelInd(Sfe6))*(F5*Sub2(Sfe6) - F2*Sub7(Sfe6)))

        Sub25(HelInd(Sfe6)) = 
     &   ((F7*Sub4(Sfe6) - F12*Sub5(Sfe6))*Sub8(HelInd(Sfe6)))/
     &     (Sub20 - MSf2(Sfe6,3,1)) - 
     &    ((F1*Sub4(Sfe6) - F6*Sub5(Sfe6))*Sub9(HelInd(Sfe6)))/
     &     (Sub23 - MSf2(Sfe6,3,1))

        Sub22(HelInd(Sfe6)) = 
     &   (2*Sub21(HelInd(Sfe6)))/(Sub20 - MSf2(Sfe6,3,1)) + 
     &    Sub6(HelInd(Sfe6))/(MU2 - S - T24 - U + 2*MNeu2(1))

        Sub24(HelInd(Sfe6)) = 
     &   Sub12(HelInd(Sfe6))/(MU2 - S - T24 - U + 2*MNeu2(1)) + 
     &    (2*Abb2*(F1*Sub4(Sfe6) - F6*Sub5(Sfe6))*
     &       (F5*Sub2(Sfe6) - F2*Sub7(Sfe6)))/
     &     (Sub23 - MSf2(Sfe6,3,1))

	ENDLOOP(Sfe6)

#include "contains.h"

	end
