#if 0
* dg_n1n1j_abbr0h.F
* abbreviations for {F[4, {1, Col1}], V[5, {Glu2}]} -> {F[11, {1}], F[11, {1}], F[4, {1, Col5}]}
* generated by FormCalc 8.4 on 24-May-2016 15:58
#endif

#include "dg_n1n1j_vars.h"
#include "contains.h"


	subroutine dg_n1n1j_abbr0h
	implicit none

#include "dg_n1n1j_vars.h"


	F13 = -ChainV0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

	F18 = ChainB0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

	F28 = ChainV0(Spinor(5,1,2),0,1,Spinor(4,1,2))

	F14 = ChainB0(Spinor(5,1,2),0,1,Spinor(4,1,2))

	F19 = ChainV1(Spinor(4,1,2),0,e(2),0,Spinor(3,-1,1))

	F23 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F24 = -ChainB1(Spinor(4,1,2),0,e(2),0,Spinor(3,-1,1))

	F26 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F20 = ChainV1(Spinor(5,1,2),0,e(2),0,Spinor(1,1,1))

	F27 = ChainV1(Spinor(5,1,2),0,k(2),0,Spinor(1,1,1))

	F21 = ChainB1(Spinor(5,1,2),0,e(2),0,Spinor(1,1,1))

	F17 = ChainB1(Spinor(5,1,2),0,k(2),0,Spinor(1,1,1))

	F9 = ChainV2(Spinor(3,1,2),0,e(2),k(2),0,Spinor(1,1,1))

	F12 = ChainB2(Spinor(3,1,2),0,e(2),k(2),0,Spinor(1,1,1))

	F2 = ChainV2(Spinor(4,1,2),0,e(2),k(2),0,Spinor(1,1,1))

	F4 = ChainB2(Spinor(4,1,2),0,e(2),k(2),0,Spinor(1,1,1))

	F29 = -ChainV2(Spinor(5,1,2),0,e(2),k(2),0,Spinor(4,-1,1))

	F22 = ChainV2(Spinor(5,1,2),0,e(2),k(2),1,Spinor(4,1,2))

	F30 = ChainB2(Spinor(5,1,2),0,e(2),k(2),0,Spinor(4,-1,1))

	F15 = ChainB2(Spinor(5,1,2),0,e(2),k(2),1,Spinor(4,1,2))

	Pair4 = Pair(e(2),k(4))

	F25 = -ChainV2(Spinor(5,1,2),0,e(2),k(2),0,Spinor(3,-1,1))

	F16 = ChainB2(Spinor(5,1,2),0,e(2),k(2),0,Spinor(3,-1,1))

	Pair2 = Pair(e(2),k(1))

	Pair3 = Pair(e(2),k(3))

	Pair1 = Pair(e(2),k(5))

	F8 = ChainV0(Spinor(3,1,2),0,0,Spinor(1,1,1))

	F10 = ChainB0(Spinor(3,1,2),0,0,Spinor(1,1,1))

	F3 = ChainV0(Spinor(4,1,2),0,0,Spinor(1,1,1))

	F5 = ChainB0(Spinor(4,1,2),0,0,Spinor(1,1,1))

	F1 = -ChainV0(Spinor(5,1,2),0,0,Spinor(3,-1,1))

	F7 = -ChainV0(Spinor(5,1,2),0,0,Spinor(4,-1,1))

	F6 = ChainB0(Spinor(5,1,2),0,0,Spinor(3,-1,1))

	F11 = ChainB0(Spinor(5,1,2),0,0,Spinor(4,-1,1))

	Abb2 = Pair2 - Pair4

	Sub13 = -(F5*(F25 - 2*F1*Pair1)) + F18*(F22 - 2*F28*Pair1)

	Sub11 = F13*(F15 - 2*F14*Pair1) - F3*(F16 - 2*F6*Pair1)

        Sub16 = -(F20*(F23 - F26)) - (-F19 + F24)*F27 - 
     &    F5*(F25 - 2*F1*Pair2) + F18*(F22 - 2*F28*Pair2)

        Sub15 = -(F17*(F19 - F24)) + F21*(F23 - F26) + 
     &    F13*(F15 - 2*F14*Pair2) - F3*(F16 - 2*F6*Pair2)

	Abb1 = Pair2 - Pair3

	Sub14 = 1/SW2*(Sub13 + 2*(SW2*Sub11 + CW2*Sub13))

	Sub17 = 1/SW2*(Sub16 + 2*(SW2*Sub15 + CW2*Sub16))

	LOOP(Sfe6, 1,2,1)

        Sub8(HelInd(Sfe6)) = 
     &   (F9 - 2*F8*Pair2)*Sub1(Sfe6) + 
     &    (F12 - 2*F10*Pair2)*Sub3(Sfe6)

        Sub4(HelInd(Sfe6)) = 
     &   (F2 - 2*F3*Pair2)*Sub1(Sfe6) + 
     &    (F4 - 2*F5*Pair2)*Sub3(Sfe6)

        Sub9(HelInd(Sfe6)) = 
     &   (F29 - 2*F7*Pair1)*Sub6(Sfe6) + 
     &    (F30 - 2*F11*Pair1)*Sub7(Sfe6)

        Sub10(HelInd(Sfe6)) = 
     &   (F25 - 2*F1*Pair1)*Sub6(Sfe6) + 
     &    (F16 - 2*F6*Pair1)*Sub7(Sfe6)

        Sub20(HelInd(Sfe6)) = 
     &   (2*Abb2*(F3*Sub1(Sfe6) + F5*Sub3(Sfe6)))/
     &     (T14 - MSf2(Sfe6,4,1)) + Sub4(HelInd(Sfe6))/(MD2 - S)

        Sub21(HelInd(Sfe6)) = 
     &   -(((F7*Sub6(Sfe6) + F11*Sub7(Sfe6))*Sub8(HelInd(Sfe6)))/
     &       ((MD2 - S)*(Sub18 - MSf2(Sfe6,4,1)))) + 
     &    ((F8*Sub1(Sfe6) + F10*Sub3(Sfe6))*Sub9(HelInd(Sfe6)))/
     &     ((MD2 - S - T24 - U + 2*MNeu2(1))*(T - MSf2(Sfe6,4,1)))

	ENDLOOP(Sfe6)

#include "contains.h"

	end
