#if 0
* ququbar_nInJgg_abbr0s.F
* abbreviations for {F[3, {Gen(1), Col1}], -F[3, {Gen(2), Col2}]} -> {F[11, {Neu(3)}], F[11, {Neu(4)}], V[5, {Glu5}], V[5, {Glu6}]}
* generated by FormCalc 9.4 (7 Jun 2016) on 10-Mar-2017 11:07
#endif

#include "ququbar_nInJgg_vars.h"
#include "real_inline.h"
#include "real_contains.h"


        subroutine ququbar_nInJgg_abbr0s
        implicit none

#include "ququbar_nInJgg_vars.h"
#include "real_inline.h"

        MatSUN(1,1) = 16/3.D0

        MatSUN(1,2) = -2/3.D0

        MatSUN(2,1) = -2/3.D0

        MatSUN(2,2) = 16/3.D0

        Sub15(Neu(3)) = 3*CW*ZNeu(Neu(3),2) + SW*ZNeu(Neu(3),1)

        Sub90(Neu(3)) = CB*ZNeu(Neu(3),3) + SB*ZNeu(Neu(3),4)

        Sub92(Neu(3)) = -(CW*ZNeu(Neu(3),2)) + SW*ZNeu(Neu(3),1)

        Sub95(Neu(3)) = CB*ZNeuC(Neu(3),3) + SB*ZNeuC(Neu(3),4)

        Sub97(Neu(3)) = -(CW*ZNeuC(Neu(3),2)) + SW*ZNeuC(Neu(3),1)

        Sub238(Neu(3)) = SB*ZNeu(Neu(3),3) - CB*ZNeu(Neu(3),4)

        Sub241(Neu(3)) = SB*ZNeuC(Neu(3),3) - CB*ZNeuC(Neu(3),4)

        Sub256(Neu(3)) = SA*ZNeu(Neu(3),3) + CA*ZNeu(Neu(3),4)

        Sub259(Neu(3)) = SA*ZNeuC(Neu(3),3) + CA*ZNeuC(Neu(3),4)

        Sub320(Neu(3)) = CA*ZNeu(Neu(3),3) - SA*ZNeu(Neu(3),4)

        Sub323(Neu(3)) = CA*ZNeuC(Neu(3),3) - SA*ZNeuC(Neu(3),4)

        Sub4(Neu(4)) = 3*CW*ZNeu(Neu(4),2) + SW*ZNeu(Neu(4),1)

        Sub91(Neu(4)) = -(CW*ZNeu(Neu(4),2)) + SW*ZNeu(Neu(4),1)

        Sub93(Neu(4)) = CB*ZNeu(Neu(4),3) + SB*ZNeu(Neu(4),4)

        Sub96(Neu(4)) = -(CW*ZNeuC(Neu(4),2)) + SW*ZNeuC(Neu(4),1)

        Sub98(Neu(4)) = CB*ZNeuC(Neu(4),3) + SB*ZNeuC(Neu(4),4)

        Sub239(Neu(4)) = SB*ZNeu(Neu(4),3) - CB*ZNeu(Neu(4),4)

        Sub242(Neu(4)) = SB*ZNeuC(Neu(4),3) - CB*ZNeuC(Neu(4),4)

        Sub257(Neu(4)) = SA*ZNeu(Neu(4),3) + CA*ZNeu(Neu(4),4)

        Sub260(Neu(4)) = SA*ZNeuC(Neu(4),3) + CA*ZNeuC(Neu(4),4)

        Sub321(Neu(4)) = CA*ZNeu(Neu(4),3) - SA*ZNeu(Neu(4),4)

        Sub324(Neu(4)) = CA*ZNeuC(Neu(4),3) - SA*ZNeuC(Neu(4),4)

        LOOP(Sfe7, 1,2,1)

        Sub613(Gen(1),Sfe7) = 
     &   -(cI*(MSf(Sfe7,3,Gen(1))*WSf(Sfe7,3,Gen(1)))) + 
     &    MSf2(Sfe7,3,Gen(1))

        ENDLOOP(Sfe7)

        LOOP(Sfe7, 1,2,1)

        Sub614(Gen(2),Sfe7) = 
     &   -(cI*(MSf(Sfe7,3,Gen(2))*WSf(Sfe7,3,Gen(2)))) + 
     &    MSf2(Sfe7,3,Gen(2))

        ENDLOOP(Sfe7)


        Sub26(Neu(3),Neu(4)) = 
     &   ZNeu(Neu(4),3)*ZNeuC(Neu(3),3) - ZNeu(Neu(4),4)*ZNeuC(Neu(3),4)

        Sub27(Neu(3),Neu(4)) = 
     &   ZNeu(Neu(3),3)*ZNeuC(Neu(4),3) - ZNeu(Neu(3),4)*ZNeuC(Neu(4),4)

        Sub94(Neu(3),Neu(4)) = 
     &   Sub90(Neu(3))*Sub91(Neu(4)) + Sub92(Neu(3))*Sub93(Neu(4))

        Sub99(Neu(3),Neu(4)) = 
     &   Sub95(Neu(3))*Sub96(Neu(4)) + Sub97(Neu(3))*Sub98(Neu(4))

        Sub240(Neu(3),Neu(4)) = 
     &   Sub238(Neu(3))*Sub91(Neu(4)) + Sub239(Neu(4))*Sub92(Neu(3))

        Sub243(Neu(3),Neu(4)) = 
     &   Sub241(Neu(3))*Sub96(Neu(4)) + Sub242(Neu(4))*Sub97(Neu(3))

        Sub258(Neu(3),Neu(4)) = 
     &   Sub256(Neu(3))*Sub91(Neu(4)) + Sub257(Neu(4))*Sub92(Neu(3))

        Sub261(Neu(3),Neu(4)) = 
     &   Sub259(Neu(3))*Sub96(Neu(4)) + Sub260(Neu(4))*Sub97(Neu(3))

        Sub322(Neu(3),Neu(4)) = 
     &   Sub320(Neu(3))*Sub91(Neu(4)) + Sub321(Neu(4))*Sub92(Neu(3))

        Sub325(Neu(3),Neu(4)) = 
     &   Sub323(Neu(3))*Sub96(Neu(4)) + Sub324(Neu(4))*Sub97(Neu(3))


        LOOP(Sfe7, 1,2,1)

        Sub6(Gen(1),Neu(3),Sfe7) = 
     &   4*MW*(SB*SW*USf(Sfe7,2,3,Gen(1))*ZNeu(Neu(3),1)) - 
     &    3*CW*(Mf(3,Gen(1))*USf(Sfe7,1,3,Gen(1))*ZNeu(Neu(3),4))

        Sub7(Gen(1),Neu(3),Sfe7) = 
     &   MW*(SB*USf(Sfe7,1,3,Gen(1))*ZNeuC(Neu(3),2)) + 
     &    Mf(3,Gen(1))*USf(Sfe7,2,3,Gen(1))*ZNeuC(Neu(3),4)

        Sub8(Gen(1),Neu(3),Sfe7) = 
     &   3*CW*Sub7(Gen(1),Neu(3),Sfe7) + 
     &    MW*(SB*SW*USf(Sfe7,1,3,Gen(1))*ZNeuC(Neu(3),1))

        Sub430(Gen(1),Neu(3),Sfe7) = 
     &   MW*(SB*Sub15(Neu(3))*USfC(Sfe7,1,3,Gen(1))) + 
     &    3*CW*(Mf(3,Gen(1))*USfC(Sfe7,2,3,Gen(1))*ZNeu(Neu(3),4))

        Sub431(Gen(1),Neu(3),Sfe7) = 
     &   4*MW*(SB*SW*USfC(Sfe7,2,3,Gen(1))*ZNeuC(Neu(3),1)) - 
     &    3*CW*(Mf(3,Gen(1))*USfC(Sfe7,1,3,Gen(1))*ZNeuC(Neu(3),4))

        ENDLOOP(Sfe7)

        LOOP(Sfe7, 1,2,1)

        Sub14(Gen(1),Neu(4),Sfe7) = 
     &   4*MW*(SB*SW*USf(Sfe7,2,3,Gen(1))*ZNeu(Neu(4),1)) - 
     &    3*CW*(Mf(3,Gen(1))*USf(Sfe7,1,3,Gen(1))*ZNeu(Neu(4),4))

        Sub19(Gen(1),Neu(4),Sfe7) = 
     &   MW*(SB*USf(Sfe7,1,3,Gen(1))*ZNeuC(Neu(4),2)) + 
     &    Mf(3,Gen(1))*USf(Sfe7,2,3,Gen(1))*ZNeuC(Neu(4),4)

        Sub20(Gen(1),Neu(4),Sfe7) = 
     &   3*CW*Sub19(Gen(1),Neu(4),Sfe7) + 
     &    MW*(SB*SW*USf(Sfe7,1,3,Gen(1))*ZNeuC(Neu(4),1))

        Sub416(Gen(1),Neu(4),Sfe7) = 
     &   MW*(SB*Sub4(Neu(4))*USfC(Sfe7,1,3,Gen(1))) + 
     &    3*CW*(Mf(3,Gen(1))*USfC(Sfe7,2,3,Gen(1))*ZNeu(Neu(4),4))

        Sub417(Gen(1),Neu(4),Sfe7) = 
     &   4*MW*(SB*SW*USfC(Sfe7,2,3,Gen(1))*ZNeuC(Neu(4),1)) - 
     &    3*CW*(Mf(3,Gen(1))*USfC(Sfe7,1,3,Gen(1))*ZNeuC(Neu(4),4))

        ENDLOOP(Sfe7)

        LOOP(Sfe7, 1,2,1)

        Sub16(Gen(2),Neu(3),Sfe7) = 
     &   MW*(SB*Sub15(Neu(3))*USfC(Sfe7,1,3,Gen(2))) + 
     &    3*CW*(Mf(3,Gen(2))*USfC(Sfe7,2,3,Gen(2))*ZNeu(Neu(3),4))

        Sub17(Gen(2),Neu(3),Sfe7) = 
     &   4*MW*(SB*SW*USfC(Sfe7,2,3,Gen(2))*ZNeuC(Neu(3),1)) - 
     &    3*CW*(Mf(3,Gen(2))*USfC(Sfe7,1,3,Gen(2))*ZNeuC(Neu(3),4))

        ENDLOOP(Sfe7)

        LOOP(Sfe7, 1,2,1)

        Sub5(Gen(2),Neu(4),Sfe7) = 
     &   MW*(SB*Sub4(Neu(4))*USfC(Sfe7,1,3,Gen(2))) + 
     &    3*CW*(Mf(3,Gen(2))*USfC(Sfe7,2,3,Gen(2))*ZNeu(Neu(4),4))

        Sub11(Gen(2),Neu(4),Sfe7) = 
     &   4*MW*(SB*SW*USfC(Sfe7,2,3,Gen(2))*ZNeuC(Neu(4),1)) - 
     &    3*CW*(Mf(3,Gen(2))*USfC(Sfe7,1,3,Gen(2))*ZNeuC(Neu(4),4))

        ENDLOOP(Sfe7)


        Sub1(Gen(1),Gen(2),Neu(3),Neu(4)) = 
     &   Mf2(3,Gen(1)) + 2*Mf2(3,Gen(2)) + MNeu2(Neu(3)) + 3*MNeu2(Neu(4))

        Sub2(Gen(1),Gen(2),Neu(3),Neu(4)) = 
     &   Mf2(3,Gen(1)) + 2*Mf2(3,Gen(2)) + 3*MNeu2(Neu(3)) + MNeu2(Neu(4))

        Sub3(Gen(1),Gen(2),Neu(3),Neu(4)) = 
     &   Mf2(3,Gen(1)) + Mf2(3,Gen(2)) + MNeu2(Neu(3)) + MNeu2(Neu(4))


#include "real_contains.h"

        end

