#if 0
* gqu_nIxJqdg_abbr0s.F
* abbreviations for {V[5, {Glu1}], F[3, {Gen(2), Col2}]} -> {F[11, {Neu(3)}], -F[12, {Cha(4)}], F[4, {Gen(5), Col5}], V[5, {Glu6}]}
* generated by FormCalc 9.4 (7 Jun 2016) on 23-Oct-2017 10:40
#endif

#include "gqu_nIxJqdg_vars.h"
#include "real_inline.h"
#include "real_contains.h"


        subroutine gqu_nIxJqdg_abbr0s
        implicit none

#include "gqu_nIxJqdg_vars.h"
#include "real_inline.h"

        MatSUN(1,1) = 16/3.D0

        MatSUN(1,2) = -2/3.D0

        MatSUN(2,1) = -2/3.D0

        MatSUN(2,2) = 16/3.D0

        Sub12(Neu(3)) = -(3*CW*ZNeu(Neu(3),2)) + SW*ZNeu(Neu(3),1)

        Sub409(Neu(3)) = 1/CW*(CW*ZNeu(Neu(3),2) + SW*ZNeu(Neu(3),1))

        Sub414(Neu(3)) = 1/CW*(CW*ZNeuC(Neu(3),2) + SW*ZNeuC(Neu(3),1))


        Sub21(Cha(4),Neu(3)) = 
     &   1/Sqrt(2.D0)*(UChaC(Cha(4),2)*ZNeu(Neu(3),3)) + 
     &    UChaC(Cha(4),1)*ZNeu(Neu(3),2)

        Sub24(Cha(4),Neu(3)) = 
     &   -(1/Sqrt(2.D0)*(VCha(Cha(4),2)*ZNeuC(Neu(3),4))) + 
     &    VCha(Cha(4),1)*ZNeuC(Neu(3),2)

        Sub410(Cha(4),Neu(3)) = 
     &   1/Sqrt(2.D0)*(Sub409(Neu(3))*VCha(Cha(4),2)) + 
     &    VCha(Cha(4),1)*ZNeu(Neu(3),4)

        Sub415(Cha(4),Neu(3)) = 
     &   1/Sqrt(2.D0)*(Sub414(Neu(3))*UChaC(Cha(4),2)) - 
     &    UChaC(Cha(4),1)*ZNeuC(Neu(3),3)



        Sub40(Gen(2),Gen(5)) = 2*Mf2(3,Gen(2)) - Mf2(4,Gen(5))

        Sub71(Gen(2),Gen(5)) = 
     &   IndexDelta(Gen(2),Gen(5)) - GaugeXi(3)*IndexDelta(Gen(2),Gen(5))

        Sub497(Gen(2),Gen(5)) = 3*Mf2(3,Gen(2)) - 2*Mf2(4,Gen(5))


        LOOP(Sfe7, 1,2,1)

        Sub580(Gen(2),Sfe7) = 
     &   -(cI*(MSf(Sfe7,4,Gen(2))*WSf(Sfe7,4,Gen(2)))) + 
     &    MSf2(Sfe7,4,Gen(2))

        Sub587(Gen(2),Sfe7) = 
     &   -(cI*(MSf(Sfe7,3,Gen(2))*WSf(Sfe7,3,Gen(2)))) + 
     &    MSf2(Sfe7,3,Gen(2))

        ENDLOOP(Sfe7)

        LOOP(Sfe7, 1,2,1)

        Sub586(Gen(5),Sfe7) = 
     &   -(cI*(MSf(Sfe7,3,Gen(5))*WSf(Sfe7,3,Gen(5)))) + 
     &    MSf2(Sfe7,3,Gen(5))

        Sub595(Gen(5),Sfe7) = 
     &   -(cI*(MSf(Sfe7,4,Gen(5))*WSf(Sfe7,4,Gen(5)))) + 
     &    MSf2(Sfe7,4,Gen(5))

        ENDLOOP(Sfe7)

        LOOP(Sfe7, 1,2,1)

        Sub5(Cha(4),Gen(2),Sfe7) = 
     &   -(2*MW*(SB*USfC(Sfe7,1,3,Gen(2))*VCha(Cha(4),1))) + 
     &    Sqrt(2.D0)*(Mf(3,Gen(2))*USfC(Sfe7,2,3,Gen(2))*VCha(Cha(4),2))

        Sub11(Cha(4),Gen(2),Sfe7) = 
     &   -(2*MW*(CB*UChaC(Cha(4),1)*USf(Sfe7,1,4,Gen(2)))) + 
     &    Sqrt(2.D0)*(Mf(4,Gen(2))*UChaC(Cha(4),2)*USf(Sfe7,2,4,Gen(2)))

        ENDLOOP(Sfe7)

        LOOP(Sfe7, 1,2,1)

        Sub80(Cha(4),Gen(5),Sfe7) = 
     &   -(2*MW*(SB*USfC(Sfe7,1,3,Gen(5))*VCha(Cha(4),1))) + 
     &    Sqrt(2.D0)*(Mf(3,Gen(5))*USfC(Sfe7,2,3,Gen(5))*VCha(Cha(4),2))

        Sub90(Cha(4),Gen(5),Sfe7) = 
     &   -(2*MW*(CB*UChaC(Cha(4),1)*USf(Sfe7,1,4,Gen(5)))) + 
     &    Sqrt(2.D0)*(Mf(4,Gen(5))*UChaC(Cha(4),2)*USf(Sfe7,2,4,Gen(5)))

        ENDLOOP(Sfe7)

        LOOP(Sfe7, 1,2,1)

        Sub1(Gen(2),Neu(3),Sfe7) = 
     &   4*MW*(SB*SW*USf(Sfe7,2,3,Gen(2))*ZNeu(Neu(3),1)) - 
     &    3*CW*(Mf(3,Gen(2))*USf(Sfe7,1,3,Gen(2))*ZNeu(Neu(3),4))

        Sub2(Gen(2),Neu(3),Sfe7) = 
     &   MW*(SB*USf(Sfe7,1,3,Gen(2))*ZNeuC(Neu(3),2)) + 
     &    Mf(3,Gen(2))*USf(Sfe7,2,3,Gen(2))*ZNeuC(Neu(3),4)

        Sub3(Gen(2),Neu(3),Sfe7) = 
     &   3*CW*Sub2(Gen(2),Neu(3),Sfe7) + 
     &    MW*(SB*SW*USf(Sfe7,1,3,Gen(2))*ZNeuC(Neu(3),1))

        ENDLOOP(Sfe7)

        LOOP(Sfe7, 1,2,1)

        Sub13(Gen(5),Neu(3),Sfe7) = 
     &   MW*(CB*Sub12(Neu(3))*USfC(Sfe7,1,4,Gen(5))) + 
     &    3*CW*(Mf(4,Gen(5))*USfC(Sfe7,2,4,Gen(5))*ZNeu(Neu(3),3))

        Sub14(Gen(5),Neu(3),Sfe7) = 
     &   2*MW*(CB*SW*USfC(Sfe7,2,4,Gen(5))*ZNeuC(Neu(3),1)) + 
     &    3*CW*(Mf(4,Gen(5))*USfC(Sfe7,1,4,Gen(5))*ZNeuC(Neu(3),3))

        ENDLOOP(Sfe7)

#include "real_contains.h"

        end

