#if 0
* ddbar_n1n1j_abbr0h.F
* abbreviations for {F[4, {1, Col1}], -F[4, {1, Col2}]} -> {F[11, {1}], F[11, {1}], V[5, {Glu5}]}
* generated by FormCalc 8.4 on 7-Apr-2016 13:04
#endif

#include "ddbar_n1n1j_vars.h"
#include "contains.h"


	subroutine ddbar_n1n1j_abbr0h
	implicit none

#include "ddbar_n1n1j_vars.h"


	F17 = -ChainV0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

	F18 = ChainB0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

	F1 = -ChainV0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

	F5 = ChainB0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

	F27 = ChainV0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

	F19 = -ChainB0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

	F15 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

	F11 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

	F31 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

	F6 = ChainV1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

	F38 = ChainV1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

	F28 = ChainV1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

	F8 = -ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

	F4 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

	F33 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

	F2 = -ChainB1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

	F25 = -ChainB1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

	F21 = -ChainB1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

	F43 = ChainV1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

	F44 = ChainB1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

	F46 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

	F26 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

	F9 = ChainV1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

	F20 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F48 = ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

	F22 = -ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

	F14 = -ChainB1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

	F24 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F41 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

	F34 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

	F35 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

	F13 = ChainV2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

	F16 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

	F42 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

	F36 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

	F37 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

	F7 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

	F12 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

	F45 = ChainV2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F47 = ChainV2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

	F49 = ChainB2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F50 = ChainB2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

	F51 = ChainV2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F52 = ChainV2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

	F54 = ChainB2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F53 = ChainB2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

	Pair1 = Pair(ec(5),k(1))

	Pair4 = Pair(ec(5),k(2))

	Pair3 = Pair(ec(5),k(3))

	Pair2 = Pair(ec(5),k(4))

	F30 = ChainV0(Spinor(3,1,2),0,0,Spinor(1,1,1))

	F32 = ChainB0(Spinor(3,1,2),0,0,Spinor(1,1,1))

	F3 = ChainV0(Spinor(4,1,2),0,0,Spinor(1,1,1))

	F10 = ChainB0(Spinor(4,1,2),0,0,Spinor(1,1,1))

	F29 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

	F39 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

	F23 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

	F40 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

	Sub13 = F10*F11 + F15*(2*F17 - 2*F18) + F5*F6

	Sub16 = F1*F2 + F3*F4 + (-2*F17 + 2*F18)*F8

	Abb1 = Pair1 - Pair2

	Abb2 = Pair1 - Pair3

        Sub19 = F8*(F14 - F9) - F1*(F7 + F2*MNeu(1)) + 
     &    F3*(F12 - F4*MNeu(1))

	Sub10 = 2*Abb2*F32 + F49 - F50 + F43*MNeu(1)

	Sub9 = 2*Abb2*F30 + F45 - F47 + F44*MNeu(1)

	Sub12 = 2*Abb1*F10 - F53 + F54 + F46*MNeu(1)

	Sub11 = 2*Abb1*F3 + F51 - F52 + F48*MNeu(1)

        Sub20 = -(F14*F15) - F13*F5 + F15*F9 - F5*F6*MNeu(1) + 
     &    F10*(F16 - F11*MNeu(1))

        Sub14 = -(F15*(F20 - F24)) - 
     &    (-F22 + F26)*(F28 + F38) - F13*F5 + 
     &    2*F27*F5*(Pair1 + Pair4) + 
     &    F10*(F16 - 2*F29*(Pair1 + Pair4)) - Sub13*MNeu(1)

        Sub17 = (F21 + F25)*(F22 - F26) - F12*F3 - F20*F8 + 
     &    F24*F8 + 2*F23*F3*(Pair1 + Pair4) + 
     &    F1*(F7 - 2*F19*(Pair1 + Pair4)) + Sub16*MNeu(1)

	Sub18 = -(1/SW2*(Sub14 + 2*CW2*Sub14 - 2*SW2*Sub17))

	Sub21 = 1/SW2*(Sub20 + 2*(SW2*Sub19 + CW2*Sub20))

	LOOP(Sfe6, 1,2,1)

        Sub7(HelInd(Sfe6)) = 
     &   (F34 - F35 + F31*MNeu(1))*Sub5(Sfe6) + 
     &    (F36 - F37 + F33*MNeu(1))*Sub6(Sfe6)

        Sub8(HelInd(Sfe6)) = 
     &   (F16 - F41 - F11*MNeu(1))*Sub5(Sfe6) + 
     &    (F12 - F42 - F4*MNeu(1))*Sub6(Sfe6)

        Sub25(HelInd(Sfe6)) = 
     &   (2*Abb2*(F30*Sub1(Sfe6) + F32*Sub3(Sfe6)))/
     &     (T - MSf2(Sfe6,4,1)) - 
     &    (Sub9*Sub1(Sfe6) + Sub10*Sub3(Sfe6))/(MD2 - Sub22)

        Sub24(HelInd(Sfe6)) = 
     &   (2*Abb1*(F3*Sub1(Sfe6) + F10*Sub3(Sfe6)))/
     &     (T14 - MSf2(Sfe6,4,1)) - 
     &    (Sub11*Sub1(Sfe6) + Sub12*Sub3(Sfe6))/(MD2 - Sub22)

        Sub26(HelInd(Sfe6)) = 
     &   ((F30*Sub1(Sfe6) + F32*Sub3(Sfe6))*Sub7(HelInd(Sfe6)))/
     &     (T - MSf2(Sfe6,4,1)) + 
     &    ((F3*Sub1(Sfe6) + F10*Sub3(Sfe6))*Sub8(HelInd(Sfe6)))/
     &     (T14 - MSf2(Sfe6,4,1))

	ENDLOOP(Sfe6)

#include "contains.h"

	end
