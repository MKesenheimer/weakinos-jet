#if 0
* abbr0h.F
* abbreviations for {-F[4, {1, Col1}], V[5, {Glu2}]} -> {F[11, {1}], F[11, {1}], -F[4, {1, Col5}]}
* generated by FormCalc 8.4 on 7-Apr-2016 13:06
#endif

#include "vars.h"
#include "inline.h"
#include "contains.h"


	subroutine abbr0h
	implicit none

#include "vars.h"

#include "inline.h"

	F24 = ChainV0(Spinor(1,-1,2),0,1,Spinor(4,1,2))

	F13 = -ChainB0(Spinor(1,-1,2),0,1,Spinor(4,1,2))

	F14 = ChainV0(Spinor(5,-1,1),1,0,Spinor(3,-1,1))

	F16 = ChainB0(Spinor(5,-1,1),1,0,Spinor(3,-1,1))

	F27 = ChainV1(Spinor(1,-1,2),0,e(2),0,Spinor(5,-1,1))

	F25 = ChainV1(Spinor(1,-1,2),0,k(2),0,Spinor(5,-1,1))

	F18 = ChainB1(Spinor(1,-1,2),0,e(2),0,Spinor(5,-1,1))

	F20 = ChainB1(Spinor(1,-1,2),0,k(2),0,Spinor(5,-1,1))

	F21 = ChainV1(Spinor(4,1,2),0,e(2),0,Spinor(3,-1,1))

	F19 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F23 = -ChainB1(Spinor(4,1,2),0,e(2),0,Spinor(3,-1,1))

	F22 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F11 = -ChainV2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(3,-1,1))

	F5 = -ChainV2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(4,-1,1))

	F17 = ChainV2(Spinor(1,-1,2),0,e(2),k(2),1,Spinor(4,1,2))

	F12 = -ChainB2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(3,-1,1))

	F6 = -ChainB2(Spinor(1,-1,2),0,e(2),k(2),0,Spinor(4,-1,1))

	F15 = -ChainB2(Spinor(1,-1,2),0,e(2),k(2),1,Spinor(4,1,2))

	F30 = -ChainV2(Spinor(3,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

	F29 = ChainB2(Spinor(3,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

	F26 = -ChainV2(Spinor(4,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

	F28 = ChainB2(Spinor(4,1,2),0,e(2),k(2),0,Spinor(5,-1,1))

	Pair1 = Pair(e(2),k(1))

	Pair2 = Pair(e(2),k(3))

	Pair4 = Pair(e(2),k(4))

	Pair3 = Pair(e(2),k(5))

	F2 = -ChainV0(Spinor(3,1,2),0,0,Spinor(5,-1,1))

	F3 = ChainB0(Spinor(3,1,2),0,0,Spinor(5,-1,1))

	F8 = -ChainV0(Spinor(4,1,2),0,0,Spinor(5,-1,1))

	F9 = ChainB0(Spinor(4,1,2),0,0,Spinor(5,-1,1))

	F7 = -ChainV0(Spinor(1,-1,2),0,0,Spinor(3,-1,1))

	F1 = -ChainV0(Spinor(1,-1,2),0,0,Spinor(4,-1,1))

	F10 = -ChainB0(Spinor(1,-1,2),0,0,Spinor(3,-1,1))

	F4 = -ChainB0(Spinor(1,-1,2),0,0,Spinor(4,-1,1))

	Abb1 = Pair1 - Pair2

	Abb2 = Pair1 - Pair4

	Sub15 = -(F8*(F12 + 2*F10*Pair1)) + F14*(F15 + 2*F13*Pair1)

	Sub16 = F16*(F17 + 2*F24*Pair1) - F9*(F11 + 2*F7*Pair1)

        Sub11 = F18*(F19 - F22) - F20*(F21 - F23) - F12*F8 - 
     &    2*F10*F8*Pair3 + F14*(F15 + 2*F13*Pair3)

        Sub13 = (F21 - F23)*F25 + (-F19 + F22)*F27 + 
     &    F16*(F17 + 2*F24*Pair3) + F9*(-F11 - 2*F7*Pair3)

	Sub14 = 1/SW2*(Sub13 + 2*(SW2*Sub11 + CW2*Sub13))

	Sub17 = 1/SW2*(Sub16 + 2*(SW2*Sub15 + CW2*Sub16))

	LOOP(Sfe6, 1,2,1)

        Sub10(HelInd(Sfe6)) = 
     &   (F30 + 2*F2*Pair3)*Sub1(Sfe6) + 
     &    (F29 + 2*F3*Pair3)*Sub3(Sfe6)

        Sub9(HelInd(Sfe6)) = 
     &   (F26 + 2*F8*Pair3)*Sub1(Sfe6) + 
     &    (F28 + 2*F9*Pair3)*Sub3(Sfe6)

        Sub8(HelInd(Sfe6)) = 
     &   (F11 + 2*F7*Pair1)*Sub5(Sfe6) + 
     &    (F12 + 2*F10*Pair1)*Sub6(Sfe6)

        Sub7(HelInd(Sfe6)) = 
     &   (F5 + 2*F1*Pair1)*Sub5(Sfe6) + 
     &    (F6 + 2*F4*Pair1)*Sub6(Sfe6)

        Sub21(HelInd(Sfe6)) = 
     &   ((F2*Sub1(Sfe6) + F3*Sub3(Sfe6))*Sub7(HelInd(Sfe6)))/
     &     (Sub18 - MSf2(Sfe6,4,1)) - 
     &    ((F8*Sub1(Sfe6) + F9*Sub3(Sfe6))*Sub8(HelInd(Sfe6)))/
     &     (Sub20 - MSf2(Sfe6,4,1))

        Sub19(HelInd(Sfe6)) = 
     &   Sub10(HelInd(Sfe6))/(MD2 - S - T24 - U + 2*MNeu2(1)) + 
     &    (2*Abb2*(F2*Sub1(Sfe6) + F3*Sub3(Sfe6)))/
     &     (Sub18 - MSf2(Sfe6,4,1))

        Sub22(HelInd(Sfe6)) = 
     &   (2*Abb1*(F8*Sub1(Sfe6) + F9*Sub3(Sfe6)))/
     &     (Sub20 - MSf2(Sfe6,4,1)) + 
     &    Sub9(HelInd(Sfe6))/(MD2 - S - T24 - U + 2*MNeu2(1))

	ENDLOOP(Sfe6)

#include "contains.h"

	end
