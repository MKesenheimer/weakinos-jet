#if 0
* abbr0h.F
* abbreviations for {F[3, {1, Col1}], -F[3, {1, Col2}]} -> {F[11, {1}], F[11, {1}], V[5, {Glu5}]}
* generated by FormCalc 8.4 on 7-Apr-2016 13:03
#endif

#include "vars.h"
#include "inline.h"
#include "contains.h"


	subroutine abbr0h
	implicit none

#include "vars.h"

#include "inline.h"

	F17 = -ChainV0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

	F18 = ChainB0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

	F1 = -ChainV0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

	F2 = ChainB0(Spinor(1,1,1),1,0,Spinor(3,-1,1))

	F29 = ChainV0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

	F19 = -ChainB0(Spinor(2,-1,2),0,1,Spinor(4,1,2))

	F15 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

	F8 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

	F40 = ChainV1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

	F7 = ChainV1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

	F25 = ChainV1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

	F28 = ChainV1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

	F10 = -ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(1,1,1))

	F4 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(3,-1,1))

	F31 = ChainB1(Spinor(2,-1,2),0,ec(5),0,Spinor(4,-1,1))

	F5 = -ChainB1(Spinor(2,-1,2),0,ec(5),1,Spinor(4,1,2))

	F23 = -ChainB1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

	F26 = -ChainB1(Spinor(2,-1,2),0,k(4),0,Spinor(1,1,1))

	F42 = ChainV1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

	F41 = ChainB1(Spinor(3,1,2),0,ec(5),0,Spinor(1,1,1))

	F50 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

	F24 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

	F11 = ChainV1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

	F20 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F53 = ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(1,1,1))

	F27 = -ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

	F12 = -ChainB1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

	F21 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F43 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

	F32 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

	F35 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

	F14 = ChainV2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

	F16 = -ChainV2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

	F44 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(3,-1,1))

	F36 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(1),0,Spinor(4,-1,1))

	F38 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

	F9 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

	F13 = -ChainB2(Spinor(2,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

	F45 = ChainV2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F46 = ChainV2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

	F47 = ChainB2(Spinor(3,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F48 = ChainB2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(1,1,1))

	F49 = ChainV2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F51 = ChainV2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

	F54 = ChainB2(Spinor(4,1,2),0,ec(5),k(2),0,Spinor(1,1,1))

	F52 = ChainB2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(1,1,1))

	Pair4 = Pair(ec(5),k(2))

	Pair1 = Pair(ec(5),k(1))

	Pair3 = Pair(ec(5),k(3))

	Pair2 = Pair(ec(5),k(4))

	F33 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

	F37 = -ChainV0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

	F22 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(3,-1,1))

	F39 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(4,-1,1))

	F34 = ChainV0(Spinor(3,1,2),0,0,Spinor(1,1,1))

	F30 = ChainB0(Spinor(3,1,2),0,0,Spinor(1,1,1))

	F3 = ChainV0(Spinor(4,1,2),0,0,Spinor(1,1,1))

	F6 = ChainB0(Spinor(4,1,2),0,0,Spinor(1,1,1))

	Sub15 = -(F10*(2*F17 - 2*F18)) + F3*F4 + F1*F5

	Sub17 = F15*(2*F17 - 2*F18) + F2*F7 + F6*F8

        Sub11 = F10*(F11 - F12) + F3*(-F13 + F4*MNeu(1)) + 
     &    F1*(F9 + F5*MNeu(1))

        Sub13 = (F11 - F12)*F15 - F14*F2 + F16*F6 - 
     &    (F2*F7 + F6*F8)*MNeu(1)

        Sub16 = F10*(F20 - F21) + (F23 + F26)*(F24 - F27) - 
     &    F1*(F9 - 2*F19*(Pair1 + Pair4)) + 
     &    F3*(F13 - 2*F22*(Pair1 + Pair4)) - Sub15*MNeu(1)

        Sub18 = F15*(F20 - F21) + (F24 - F27)*(F25 + F28) + 
     &    F2*(F14 - 2*F29*(Pair1 + Pair4)) + 
     &    F6*(-F16 + 2*F33*(Pair1 + Pair4)) + Sub17*MNeu(1)

	Abb1 = Pair1 - Pair2

	Abb2 = Pair1 - Pair3

	Sub14 = 1/SW2*(Sub13 + 4*SW2*Sub11 - 4*CW2*Sub13)

	Sub19 = 1/SW2*(Sub18 + 4*SW2*Sub16 - 4*CW2*Sub18)

	Sub9 = 2*Abb2*F34 + F45 - F46 + F41*MNeu(1)

	Sub10 = 2*Abb2*F30 + F47 - F48 + F42*MNeu(1)

	Sub20 = F52 - F54 - 2*Abb1*F6 - F50*MNeu(1)

	Sub21 = 2*Abb1*F3 + F49 - F51 + F53*MNeu(1)

	LOOP(Sfe6, 1,2,1)

        Sub7(HelInd(Sfe6)) = 
     &   (F32 - F35 + F40*MNeu(1))*Sub3(Sfe6) - 
     &    (F36 - F38 + F31*MNeu(1))*Sub4(Sfe6)

        Sub8(HelInd(Sfe6)) = 
     &   (F16 - F43 - F8*MNeu(1))*Sub3(Sfe6) - 
     &    (F13 - F44 - F4*MNeu(1))*Sub4(Sfe6)

        Sub25(HelInd(Sfe6)) = 
     &   ((F34*Sub1(Sfe6) - F30*Sub6(Sfe6))*Sub7(HelInd(Sfe6)))/
     &     (T - MSf2(Sfe6,3,1)) + 
     &    ((F3*Sub1(Sfe6) - F6*Sub6(Sfe6))*Sub8(HelInd(Sfe6)))/
     &     (T14 - MSf2(Sfe6,3,1))

        Sub24(HelInd(Sfe6)) = 
     &   ((F37*Sub3(Sfe6) - F39*Sub4(Sfe6))*
     &       (Sub9*Sub1(Sfe6) - Sub10*Sub6(Sfe6)))/
     &     (T24 - MSf2(Sfe6,3,1)) - 
     &    ((F33*Sub3(Sfe6) - F22*Sub4(Sfe6))*
     &       (Sub21*Sub1(Sfe6) + Sub20*Sub6(Sfe6)))/
     &     (U - MSf2(Sfe6,3,1))

	ENDLOOP(Sfe6)

#include "contains.h"

	end
